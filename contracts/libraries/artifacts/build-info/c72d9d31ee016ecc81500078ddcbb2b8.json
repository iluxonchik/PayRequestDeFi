{
	"id": "c72d9d31ee016ecc81500078ddcbb2b8",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.7",
	"solcLongVersion": "0.8.7+commit.e28d00a7",
	"input": {
		"language": "Solidity",
		"sources": {
			"contracts/libraries/Billing.sol": {
				"content": "pragma solidity ^0.8.0;\n\nlibrary Billing {\n\n    /// @notice Price of token in terms of its amount. Mapping value interface.\n    struct TokenPriceMappingValue {\n        uint256 tokenAmount;\n        bool isSet;\n    }\n\n    /// @notice Token price interface. Contains the address of the token and its amount. Useful abstraction for pulic input paramaters.\n    struct TokenPrice {\n        address tokenAddr;\n        uint256 tokenAmount;\n    }\n\n    /// @notice Maps ERC-721 token ID to the token addrss that maps to the price in terms of the amount of that token.\n    struct RequestPrice {\n        mapping(uint => mapping(address => TokenPriceMappingValue)) tokenIdToPriceMap;\n        mapping(uint => TokenPrice[]) tokenIdToPriceArray;\n    }\n}"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			}
		}
	},
	"output": {
		"contracts": {
			"contracts/libraries/Billing.sol": {
				"Billing": {
					"abi": [],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/libraries/Billing.sol\":25:737  library Billing {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/libraries/Billing.sol\":25:737  library Billing {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa2646970667358221220c111cbe0a1d2d16f47290916199a19e6d91441fb718bad4d4c40ffbb67bfec3864736f6c63430008070033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220c111cbe0a1d2d16f47290916199a19e6d91441fb718bad4d4c40ffbb67bfec3864736f6c63430008070033",
							"opcodes": "PUSH1 0x56 PUSH1 0x50 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x43 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xC1 GT 0xCB 0xE0 LOG1 0xD2 0xD1 PUSH16 0x47290916199A19E6D91441FB718BAD4D 0x4C BLOCKHASH SELFDESTRUCT 0xBB PUSH8 0xBFEC3864736F6C63 NUMBER STOP ADDMOD SMOD STOP CALLER ",
							"sourceMap": "25:712:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220c111cbe0a1d2d16f47290916199a19e6d91441fb718bad4d4c40ffbb67bfec3864736f6c63430008070033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xC1 GT 0xCB 0xE0 LOG1 0xD2 0xD1 PUSH16 0x47290916199A19E6D91441FB718BAD4D 0x4C BLOCKHASH SELFDESTRUCT 0xBB PUSH8 0xBFEC3864736F6C63 NUMBER STOP ADDMOD SMOD STOP CALLER ",
							"sourceMap": "25:712:0:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17200",
								"executionCost": "97",
								"totalCost": "17297"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 25,
									"end": 737,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 25,
									"end": 737,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 25,
									"end": 737,
									"name": "PUSH",
									"source": 0,
									"value": "B"
								},
								{
									"begin": 25,
									"end": 737,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 25,
									"end": 737,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 25,
									"end": 737,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 25,
									"end": 737,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 25,
									"end": 737,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 25,
									"end": 737,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 25,
									"end": 737,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 25,
									"end": 737,
									"name": "BYTE",
									"source": 0
								},
								{
									"begin": 25,
									"end": 737,
									"name": "PUSH",
									"source": 0,
									"value": "73"
								},
								{
									"begin": 25,
									"end": 737,
									"name": "EQ",
									"source": 0
								},
								{
									"begin": 25,
									"end": 737,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 25,
									"end": 737,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 25,
									"end": 737,
									"name": "PUSH",
									"source": 0,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 25,
									"end": 737,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 25,
									"end": 737,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 25,
									"end": 737,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 25,
									"end": 737,
									"name": "PUSH",
									"source": 0,
									"value": "4"
								},
								{
									"begin": 25,
									"end": 737,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 25,
									"end": 737,
									"name": "PUSH",
									"source": 0,
									"value": "24"
								},
								{
									"begin": 25,
									"end": 737,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 25,
									"end": 737,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 25,
									"end": 737,
									"name": "tag",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 25,
									"end": 737,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 25,
									"end": 737,
									"name": "ADDRESS",
									"source": 0
								},
								{
									"begin": 25,
									"end": 737,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 25,
									"end": 737,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 25,
									"end": 737,
									"name": "PUSH",
									"source": 0,
									"value": "73"
								},
								{
									"begin": 25,
									"end": 737,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 25,
									"end": 737,
									"name": "MSTORE8",
									"source": 0
								},
								{
									"begin": 25,
									"end": 737,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 25,
									"end": 737,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 25,
									"end": 737,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220c111cbe0a1d2d16f47290916199a19e6d91441fb718bad4d4c40ffbb67bfec3864736f6c63430008070033",
									".code": [
										{
											"begin": 25,
											"end": 737,
											"name": "PUSHDEPLOYADDRESS",
											"source": 0
										},
										{
											"begin": 25,
											"end": 737,
											"name": "ADDRESS",
											"source": 0
										},
										{
											"begin": 25,
											"end": 737,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 25,
											"end": 737,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 25,
											"end": 737,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 25,
											"end": 737,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 25,
											"end": 737,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 25,
											"end": 737,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 25,
											"end": 737,
											"name": "REVERT",
											"source": 0
										}
									]
								}
							}
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/libraries/Billing.sol\":\"Billing\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/libraries/Billing.sol\":{\"keccak256\":\"0xe1270f1fc2c042d46824c13a9234ebdf247dcd5743adab744528d430a636bb81\",\"urls\":[\"bzz-raw://9e97bd013ca1c9e723adbae81ef735a1e2c2046388946130e6871f522cf3c70d\",\"dweb:/ipfs/QmPzFC5t3cUDfG7qxaUB3izi4ER9uF7ZyQEQbT1kUYK8KJ\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"errors": [
			{
				"component": "general",
				"errorCode": "1878",
				"formattedMessage": "Warning: SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing \"SPDX-License-Identifier: <SPDX-License>\" to each source file. Use \"SPDX-License-Identifier: UNLICENSED\" for non-open-source code. Please see https://spdx.org for more information.\n--> contracts/libraries/Billing.sol\n\n",
				"message": "SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing \"SPDX-License-Identifier: <SPDX-License>\" to each source file. Use \"SPDX-License-Identifier: UNLICENSED\" for non-open-source code. Please see https://spdx.org for more information.",
				"severity": "warning",
				"sourceLocation": {
					"end": -1,
					"file": "contracts/libraries/Billing.sol",
					"start": -1
				},
				"type": "Warning"
			}
		],
		"sources": {
			"contracts/libraries/Billing.sol": {
				"ast": {
					"absolutePath": "contracts/libraries/Billing.sol",
					"exportedSymbols": {
						"Billing": [
							26
						]
					},
					"id": 27,
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "0:23:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "library",
							"fullyImplemented": true,
							"id": 26,
							"linearizedBaseContracts": [
								26
							],
							"name": "Billing",
							"nameLocation": "33:7:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"canonicalName": "Billing.TokenPriceMappingValue",
									"id": 6,
									"members": [
										{
											"constant": false,
											"id": 3,
											"mutability": "mutable",
											"name": "tokenAmount",
											"nameLocation": "176:11:0",
											"nodeType": "VariableDeclaration",
											"scope": 6,
											"src": "168:19:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 2,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "168:7:0",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 5,
											"mutability": "mutable",
											"name": "isSet",
											"nameLocation": "202:5:0",
											"nodeType": "VariableDeclaration",
											"scope": 6,
											"src": "197:10:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_bool",
												"typeString": "bool"
											},
											"typeName": {
												"id": 4,
												"name": "bool",
												"nodeType": "ElementaryTypeName",
												"src": "197:4:0",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "TokenPriceMappingValue",
									"nameLocation": "135:22:0",
									"nodeType": "StructDefinition",
									"scope": 26,
									"src": "128:86:0",
									"visibility": "public"
								},
								{
									"canonicalName": "Billing.TokenPrice",
									"id": 11,
									"members": [
										{
											"constant": false,
											"id": 8,
											"mutability": "mutable",
											"name": "tokenAddr",
											"nameLocation": "392:9:0",
											"nodeType": "VariableDeclaration",
											"scope": 11,
											"src": "384:17:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											},
											"typeName": {
												"id": 7,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "384:7:0",
												"stateMutability": "nonpayable",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 10,
											"mutability": "mutable",
											"name": "tokenAmount",
											"nameLocation": "419:11:0",
											"nodeType": "VariableDeclaration",
											"scope": 11,
											"src": "411:19:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 9,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "411:7:0",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "TokenPrice",
									"nameLocation": "363:10:0",
									"nodeType": "StructDefinition",
									"scope": 26,
									"src": "356:81:0",
									"visibility": "public"
								},
								{
									"canonicalName": "Billing.RequestPrice",
									"id": 25,
									"members": [
										{
											"constant": false,
											"id": 18,
											"mutability": "mutable",
											"name": "tokenIdToPriceMap",
											"nameLocation": "652:17:0",
											"nodeType": "VariableDeclaration",
											"scope": 25,
											"src": "592:77:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_struct$_TokenPriceMappingValue_$6_storage_$_$",
												"typeString": "mapping(uint256 => mapping(address => struct Billing.TokenPriceMappingValue))"
											},
											"typeName": {
												"id": 17,
												"keyType": {
													"id": 12,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "600:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "Mapping",
												"src": "592:59:0",
												"typeDescriptions": {
													"typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_struct$_TokenPriceMappingValue_$6_storage_$_$",
													"typeString": "mapping(uint256 => mapping(address => struct Billing.TokenPriceMappingValue))"
												},
												"valueType": {
													"id": 16,
													"keyType": {
														"id": 13,
														"name": "address",
														"nodeType": "ElementaryTypeName",
														"src": "616:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Mapping",
													"src": "608:42:0",
													"typeDescriptions": {
														"typeIdentifier": "t_mapping$_t_address_$_t_struct$_TokenPriceMappingValue_$6_storage_$",
														"typeString": "mapping(address => struct Billing.TokenPriceMappingValue)"
													},
													"valueType": {
														"id": 15,
														"nodeType": "UserDefinedTypeName",
														"pathNode": {
															"id": 14,
															"name": "TokenPriceMappingValue",
															"nodeType": "IdentifierPath",
															"referencedDeclaration": 6,
															"src": "627:22:0"
														},
														"referencedDeclaration": 6,
														"src": "627:22:0",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_TokenPriceMappingValue_$6_storage_ptr",
															"typeString": "struct Billing.TokenPriceMappingValue"
														}
													}
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 24,
											"mutability": "mutable",
											"name": "tokenIdToPriceArray",
											"nameLocation": "709:19:0",
											"nodeType": "VariableDeclaration",
											"scope": 25,
											"src": "679:49:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_uint256_$_t_array$_t_struct$_TokenPrice_$11_storage_$dyn_storage_$",
												"typeString": "mapping(uint256 => struct Billing.TokenPrice[])"
											},
											"typeName": {
												"id": 23,
												"keyType": {
													"id": 19,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "687:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "Mapping",
												"src": "679:29:0",
												"typeDescriptions": {
													"typeIdentifier": "t_mapping$_t_uint256_$_t_array$_t_struct$_TokenPrice_$11_storage_$dyn_storage_$",
													"typeString": "mapping(uint256 => struct Billing.TokenPrice[])"
												},
												"valueType": {
													"baseType": {
														"id": 21,
														"nodeType": "UserDefinedTypeName",
														"pathNode": {
															"id": 20,
															"name": "TokenPrice",
															"nodeType": "IdentifierPath",
															"referencedDeclaration": 11,
															"src": "695:10:0"
														},
														"referencedDeclaration": 11,
														"src": "695:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_TokenPrice_$11_storage_ptr",
															"typeString": "struct Billing.TokenPrice"
														}
													},
													"id": 22,
													"nodeType": "ArrayTypeName",
													"src": "695:12:0",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_struct$_TokenPrice_$11_storage_$dyn_storage_ptr",
														"typeString": "struct Billing.TokenPrice[]"
													}
												}
											},
											"visibility": "internal"
										}
									],
									"name": "RequestPrice",
									"nameLocation": "569:12:0",
									"nodeType": "StructDefinition",
									"scope": 26,
									"src": "562:173:0",
									"visibility": "public"
								}
							],
							"scope": 27,
							"src": "25:712:0",
							"usedErrors": []
						}
					],
					"src": "0:737:0"
				},
				"id": 0
			}
		}
	}
}