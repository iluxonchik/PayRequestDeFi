{
	"id": "c0793ac228c0a7f61a4ea8183a62e2e8",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.7",
	"solcLongVersion": "0.8.7+commit.e28d00a7",
	"input": {
		"language": "Solidity",
		"sources": {
			"contracts/tests/FixeDynamicTokenAmount.sol": {
				"content": "pragma solidity ^0.8.0;\nimport \"interfaces/IDynamicTokenAmount.sol\";\n\ncontract FixedDynamicTokenAmount is IDynamicTokenAmount {\n    uint256 public price;\n\n    constructor(uint256 _price) {\n        price = _price;\n    }\n\n    function getAmountForToken(uint256 paymentRequestId, address token, address payer) external override returns (uint256) {\n        return price;\n    }\n\n    function isTokenAccepted(uint256 paymentRequestId, address token, address payer) public override returns (bool) {\n        return true;\n    }\n}"
			},
			"interfaces/IDynamicTokenAmount.sol": {
				"content": "pragma solidity ^0.8.0;\n\ninterface IDynamicTokenAmount {\n    // For the case of dynamic payments, the communication about which token payments are accepted, is outside of\n    // the scope of this interface. One idea that I have is to provide a isPaymentInTokenAccepted() function which\n    // would return a boolean. However, this is not required for the functionality of the PaymentRequest. If desired,\n    // it can be implemented as a part of a separate interface.\n\n    /// @notice Returns the amount of tokens for a particular paymentRequest ID.\n    function getAmountForToken(uint256 paymentRequestId, address token, address payer) external returns (uint256);\n\n    // TODO: add isTokenAccepted() method? this would allow the swapper to query for dynamic tokens.\n    // do we really want to add this to the PaymentRequest? this would enforce all implemenetations to\n    // create it. could it be bad to enforce this on all? what about generic payments?\n    function isTokenAccepted(uint256 paymentRequestId, address token, address payer) external returns (bool);\n }"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			}
		}
	},
	"output": {
		"contracts": {
			"contracts/tests/FixeDynamicTokenAmount.sol": {
				"FixedDynamicTokenAmount": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_price",
									"type": "uint256"
								}
							],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "paymentRequestId",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "token",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "payer",
									"type": "address"
								}
							],
							"name": "getAmountForToken",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "paymentRequestId",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "token",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "payer",
									"type": "address"
								}
							],
							"name": "isTokenAccepted",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "price",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/tests/FixeDynamicTokenAmount.sol\":70:520  contract FixedDynamicTokenAmount is IDynamicTokenAmount {... */\n  mstore(0x40, 0x80)\n    /* \"contracts/tests/FixeDynamicTokenAmount.sol\":159:218  constructor(uint256 _price) {... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  mload(0x40)\n  sub(codesize, bytecodeSize)\n  dup1\n  bytecodeSize\n  dup4\n  codecopy\n  dup2\n  dup2\n  add\n  0x40\n  mstore\n  dup2\n  add\n  swap1\n  tag_2\n  swap2\n  swap1\n  tag_3\n  jump\t// in\ntag_2:\n    /* \"contracts/tests/FixeDynamicTokenAmount.sol\":205:211  _price */\n  dup1\n    /* \"contracts/tests/FixeDynamicTokenAmount.sol\":197:202  price */\n  0x00\n    /* \"contracts/tests/FixeDynamicTokenAmount.sol\":197:211  price = _price */\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"contracts/tests/FixeDynamicTokenAmount.sol\":159:218  constructor(uint256 _price) {... */\n  pop\n    /* \"contracts/tests/FixeDynamicTokenAmount.sol\":70:520  contract FixedDynamicTokenAmount is IDynamicTokenAmount {... */\n  jump(tag_6)\n    /* \"#utility.yul\":7:150   */\ntag_8:\n    /* \"#utility.yul\":64:69   */\n  0x00\n    /* \"#utility.yul\":95:101   */\n  dup2\n    /* \"#utility.yul\":89:102   */\n  mload\n    /* \"#utility.yul\":80:102   */\n  swap1\n  pop\n    /* \"#utility.yul\":111:144   */\n  tag_10\n    /* \"#utility.yul\":138:143   */\n  dup2\n    /* \"#utility.yul\":111:144   */\n  tag_11\n  jump\t// in\ntag_10:\n    /* \"#utility.yul\":7:150   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":156:507   */\ntag_3:\n    /* \"#utility.yul\":226:232   */\n  0x00\n    /* \"#utility.yul\":275:277   */\n  0x20\n    /* \"#utility.yul\":263:272   */\n  dup3\n    /* \"#utility.yul\":254:261   */\n  dup5\n    /* \"#utility.yul\":250:273   */\n  sub\n    /* \"#utility.yul\":246:278   */\n  slt\n    /* \"#utility.yul\":243:362   */\n  iszero\n  tag_13\n  jumpi\n    /* \"#utility.yul\":281:360   */\n  tag_14\n  tag_15\n  jump\t// in\ntag_14:\n    /* \"#utility.yul\":243:362   */\ntag_13:\n    /* \"#utility.yul\":401:402   */\n  0x00\n    /* \"#utility.yul\":426:490   */\n  tag_16\n    /* \"#utility.yul\":482:489   */\n  dup5\n    /* \"#utility.yul\":473:479   */\n  dup3\n    /* \"#utility.yul\":462:471   */\n  dup6\n    /* \"#utility.yul\":458:480   */\n  add\n    /* \"#utility.yul\":426:490   */\n  tag_8\n  jump\t// in\ntag_16:\n    /* \"#utility.yul\":416:490   */\n  swap2\n  pop\n    /* \"#utility.yul\":372:500   */\n  pop\n    /* \"#utility.yul\":156:507   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":594:671   */\ntag_19:\n    /* \"#utility.yul\":631:638   */\n  0x00\n    /* \"#utility.yul\":660:665   */\n  dup2\n    /* \"#utility.yul\":649:665   */\n  swap1\n  pop\n    /* \"#utility.yul\":594:671   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":800:917   */\ntag_15:\n    /* \"#utility.yul\":909:910   */\n  0x00\n    /* \"#utility.yul\":906:907   */\n  dup1\n    /* \"#utility.yul\":899:911   */\n  revert\n    /* \"#utility.yul\":923:1045   */\ntag_11:\n    /* \"#utility.yul\":996:1020   */\n  tag_25\n    /* \"#utility.yul\":1014:1019   */\n  dup2\n    /* \"#utility.yul\":996:1020   */\n  tag_19\n  jump\t// in\ntag_25:\n    /* \"#utility.yul\":989:994   */\n  dup2\n    /* \"#utility.yul\":986:1021   */\n  eq\n    /* \"#utility.yul\":976:1039   */\n  tag_26\n  jumpi\n    /* \"#utility.yul\":1035:1036   */\n  0x00\n    /* \"#utility.yul\":1032:1033   */\n  dup1\n    /* \"#utility.yul\":1025:1037   */\n  revert\n    /* \"#utility.yul\":976:1039   */\ntag_26:\n    /* \"#utility.yul\":923:1045   */\n  pop\n  jump\t// out\n    /* \"contracts/tests/FixeDynamicTokenAmount.sol\":70:520  contract FixedDynamicTokenAmount is IDynamicTokenAmount {... */\ntag_6:\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/tests/FixeDynamicTokenAmount.sol\":70:520  contract FixedDynamicTokenAmount is IDynamicTokenAmount {... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x034a6778\n      eq\n      tag_3\n      jumpi\n      dup1\n      0xa035b1fe\n      eq\n      tag_4\n      jumpi\n      dup1\n      0xaf577392\n      eq\n      tag_5\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"contracts/tests/FixeDynamicTokenAmount.sol\":224:372  function getAmountForToken(uint256 paymentRequestId, address token, address payer) external override returns (uint256) {... */\n    tag_3:\n      tag_6\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_7\n      swap2\n      swap1\n      tag_8\n      jump\t// in\n    tag_7:\n      tag_9\n      jump\t// in\n    tag_6:\n      mload(0x40)\n      tag_10\n      swap2\n      swap1\n      tag_11\n      jump\t// in\n    tag_10:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/tests/FixeDynamicTokenAmount.sol\":132:152  uint256 public price */\n    tag_4:\n      tag_12\n      tag_13\n      jump\t// in\n    tag_12:\n      mload(0x40)\n      tag_14\n      swap2\n      swap1\n      tag_11\n      jump\t// in\n    tag_14:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/tests/FixeDynamicTokenAmount.sol\":378:518  function isTokenAccepted(uint256 paymentRequestId, address token, address payer) public override returns (bool) {... */\n    tag_5:\n      tag_15\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_16\n      swap2\n      swap1\n      tag_8\n      jump\t// in\n    tag_16:\n      tag_17\n      jump\t// in\n    tag_15:\n      mload(0x40)\n      tag_18\n      swap2\n      swap1\n      tag_19\n      jump\t// in\n    tag_18:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/tests/FixeDynamicTokenAmount.sol\":224:372  function getAmountForToken(uint256 paymentRequestId, address token, address payer) external override returns (uint256) {... */\n    tag_9:\n        /* \"contracts/tests/FixeDynamicTokenAmount.sol\":334:341  uint256 */\n      0x00\n        /* \"contracts/tests/FixeDynamicTokenAmount.sol\":360:365  price */\n      dup1\n      sload\n        /* \"contracts/tests/FixeDynamicTokenAmount.sol\":353:365  return price */\n      swap1\n      pop\n        /* \"contracts/tests/FixeDynamicTokenAmount.sol\":224:372  function getAmountForToken(uint256 paymentRequestId, address token, address payer) external override returns (uint256) {... */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/tests/FixeDynamicTokenAmount.sol\":132:152  uint256 public price */\n    tag_13:\n      sload(0x00)\n      dup2\n      jump\t// out\n        /* \"contracts/tests/FixeDynamicTokenAmount.sol\":378:518  function isTokenAccepted(uint256 paymentRequestId, address token, address payer) public override returns (bool) {... */\n    tag_17:\n        /* \"contracts/tests/FixeDynamicTokenAmount.sol\":484:488  bool */\n      0x00\n        /* \"contracts/tests/FixeDynamicTokenAmount.sol\":507:511  true */\n      0x01\n        /* \"contracts/tests/FixeDynamicTokenAmount.sol\":500:511  return true */\n      swap1\n      pop\n        /* \"contracts/tests/FixeDynamicTokenAmount.sol\":378:518  function isTokenAccepted(uint256 paymentRequestId, address token, address payer) public override returns (bool) {... */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7:146   */\n    tag_23:\n        /* \"#utility.yul\":53:58   */\n      0x00\n        /* \"#utility.yul\":91:97   */\n      dup2\n        /* \"#utility.yul\":78:98   */\n      calldataload\n        /* \"#utility.yul\":69:98   */\n      swap1\n      pop\n        /* \"#utility.yul\":107:140   */\n      tag_25\n        /* \"#utility.yul\":134:139   */\n      dup2\n        /* \"#utility.yul\":107:140   */\n      tag_26\n      jump\t// in\n    tag_25:\n        /* \"#utility.yul\":7:146   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":152:291   */\n    tag_27:\n        /* \"#utility.yul\":198:203   */\n      0x00\n        /* \"#utility.yul\":236:242   */\n      dup2\n        /* \"#utility.yul\":223:243   */\n      calldataload\n        /* \"#utility.yul\":214:243   */\n      swap1\n      pop\n        /* \"#utility.yul\":252:285   */\n      tag_29\n        /* \"#utility.yul\":279:284   */\n      dup2\n        /* \"#utility.yul\":252:285   */\n      tag_30\n      jump\t// in\n    tag_29:\n        /* \"#utility.yul\":152:291   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":297:916   */\n    tag_8:\n        /* \"#utility.yul\":374:380   */\n      0x00\n        /* \"#utility.yul\":382:388   */\n      dup1\n        /* \"#utility.yul\":390:396   */\n      0x00\n        /* \"#utility.yul\":439:441   */\n      0x60\n        /* \"#utility.yul\":427:436   */\n      dup5\n        /* \"#utility.yul\":418:425   */\n      dup7\n        /* \"#utility.yul\":414:437   */\n      sub\n        /* \"#utility.yul\":410:442   */\n      slt\n        /* \"#utility.yul\":407:526   */\n      iszero\n      tag_32\n      jumpi\n        /* \"#utility.yul\":445:524   */\n      tag_33\n      tag_34\n      jump\t// in\n    tag_33:\n        /* \"#utility.yul\":407:526   */\n    tag_32:\n        /* \"#utility.yul\":565:566   */\n      0x00\n        /* \"#utility.yul\":590:643   */\n      tag_35\n        /* \"#utility.yul\":635:642   */\n      dup7\n        /* \"#utility.yul\":626:632   */\n      dup3\n        /* \"#utility.yul\":615:624   */\n      dup8\n        /* \"#utility.yul\":611:633   */\n      add\n        /* \"#utility.yul\":590:643   */\n      tag_27\n      jump\t// in\n    tag_35:\n        /* \"#utility.yul\":580:643   */\n      swap4\n      pop\n        /* \"#utility.yul\":536:653   */\n      pop\n        /* \"#utility.yul\":692:694   */\n      0x20\n        /* \"#utility.yul\":718:771   */\n      tag_36\n        /* \"#utility.yul\":763:770   */\n      dup7\n        /* \"#utility.yul\":754:760   */\n      dup3\n        /* \"#utility.yul\":743:752   */\n      dup8\n        /* \"#utility.yul\":739:761   */\n      add\n        /* \"#utility.yul\":718:771   */\n      tag_23\n      jump\t// in\n    tag_36:\n        /* \"#utility.yul\":708:771   */\n      swap3\n      pop\n        /* \"#utility.yul\":663:781   */\n      pop\n        /* \"#utility.yul\":820:822   */\n      0x40\n        /* \"#utility.yul\":846:899   */\n      tag_37\n        /* \"#utility.yul\":891:898   */\n      dup7\n        /* \"#utility.yul\":882:888   */\n      dup3\n        /* \"#utility.yul\":871:880   */\n      dup8\n        /* \"#utility.yul\":867:889   */\n      add\n        /* \"#utility.yul\":846:899   */\n      tag_23\n      jump\t// in\n    tag_37:\n        /* \"#utility.yul\":836:899   */\n      swap2\n      pop\n        /* \"#utility.yul\":791:909   */\n      pop\n        /* \"#utility.yul\":297:916   */\n      swap3\n      pop\n      swap3\n      pop\n      swap3\n      jump\t// out\n        /* \"#utility.yul\":922:1031   */\n    tag_38:\n        /* \"#utility.yul\":1003:1024   */\n      tag_40\n        /* \"#utility.yul\":1018:1023   */\n      dup2\n        /* \"#utility.yul\":1003:1024   */\n      tag_41\n      jump\t// in\n    tag_40:\n        /* \"#utility.yul\":998:1001   */\n      dup3\n        /* \"#utility.yul\":991:1025   */\n      mstore\n        /* \"#utility.yul\":922:1031   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1037:1155   */\n    tag_42:\n        /* \"#utility.yul\":1124:1148   */\n      tag_44\n        /* \"#utility.yul\":1142:1147   */\n      dup2\n        /* \"#utility.yul\":1124:1148   */\n      tag_45\n      jump\t// in\n    tag_44:\n        /* \"#utility.yul\":1119:1122   */\n      dup3\n        /* \"#utility.yul\":1112:1149   */\n      mstore\n        /* \"#utility.yul\":1037:1155   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1161:1371   */\n    tag_19:\n        /* \"#utility.yul\":1248:1252   */\n      0x00\n        /* \"#utility.yul\":1286:1288   */\n      0x20\n        /* \"#utility.yul\":1275:1284   */\n      dup3\n        /* \"#utility.yul\":1271:1289   */\n      add\n        /* \"#utility.yul\":1263:1289   */\n      swap1\n      pop\n        /* \"#utility.yul\":1299:1364   */\n      tag_47\n        /* \"#utility.yul\":1361:1362   */\n      0x00\n        /* \"#utility.yul\":1350:1359   */\n      dup4\n        /* \"#utility.yul\":1346:1363   */\n      add\n        /* \"#utility.yul\":1337:1343   */\n      dup5\n        /* \"#utility.yul\":1299:1364   */\n      tag_38\n      jump\t// in\n    tag_47:\n        /* \"#utility.yul\":1161:1371   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1377:1599   */\n    tag_11:\n        /* \"#utility.yul\":1470:1474   */\n      0x00\n        /* \"#utility.yul\":1508:1510   */\n      0x20\n        /* \"#utility.yul\":1497:1506   */\n      dup3\n        /* \"#utility.yul\":1493:1511   */\n      add\n        /* \"#utility.yul\":1485:1511   */\n      swap1\n      pop\n        /* \"#utility.yul\":1521:1592   */\n      tag_49\n        /* \"#utility.yul\":1589:1590   */\n      0x00\n        /* \"#utility.yul\":1578:1587   */\n      dup4\n        /* \"#utility.yul\":1574:1591   */\n      add\n        /* \"#utility.yul\":1565:1571   */\n      dup5\n        /* \"#utility.yul\":1521:1592   */\n      tag_42\n      jump\t// in\n    tag_49:\n        /* \"#utility.yul\":1377:1599   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1686:1782   */\n    tag_52:\n        /* \"#utility.yul\":1723:1730   */\n      0x00\n        /* \"#utility.yul\":1752:1776   */\n      tag_54\n        /* \"#utility.yul\":1770:1775   */\n      dup3\n        /* \"#utility.yul\":1752:1776   */\n      tag_55\n      jump\t// in\n    tag_54:\n        /* \"#utility.yul\":1741:1776   */\n      swap1\n      pop\n        /* \"#utility.yul\":1686:1782   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1788:1878   */\n    tag_41:\n        /* \"#utility.yul\":1822:1829   */\n      0x00\n        /* \"#utility.yul\":1865:1870   */\n      dup2\n        /* \"#utility.yul\":1858:1871   */\n      iszero\n        /* \"#utility.yul\":1851:1872   */\n      iszero\n        /* \"#utility.yul\":1840:1872   */\n      swap1\n      pop\n        /* \"#utility.yul\":1788:1878   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1884:2010   */\n    tag_55:\n        /* \"#utility.yul\":1921:1928   */\n      0x00\n        /* \"#utility.yul\":1961:2003   */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":1954:1959   */\n      dup3\n        /* \"#utility.yul\":1950:2004   */\n      and\n        /* \"#utility.yul\":1939:2004   */\n      swap1\n      pop\n        /* \"#utility.yul\":1884:2010   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2016:2093   */\n    tag_45:\n        /* \"#utility.yul\":2053:2060   */\n      0x00\n        /* \"#utility.yul\":2082:2087   */\n      dup2\n        /* \"#utility.yul\":2071:2087   */\n      swap1\n      pop\n        /* \"#utility.yul\":2016:2093   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2222:2339   */\n    tag_34:\n        /* \"#utility.yul\":2331:2332   */\n      0x00\n        /* \"#utility.yul\":2328:2329   */\n      dup1\n        /* \"#utility.yul\":2321:2333   */\n      revert\n        /* \"#utility.yul\":2345:2467   */\n    tag_26:\n        /* \"#utility.yul\":2418:2442   */\n      tag_63\n        /* \"#utility.yul\":2436:2441   */\n      dup2\n        /* \"#utility.yul\":2418:2442   */\n      tag_52\n      jump\t// in\n    tag_63:\n        /* \"#utility.yul\":2411:2416   */\n      dup2\n        /* \"#utility.yul\":2408:2443   */\n      eq\n        /* \"#utility.yul\":2398:2461   */\n      tag_64\n      jumpi\n        /* \"#utility.yul\":2457:2458   */\n      0x00\n        /* \"#utility.yul\":2454:2455   */\n      dup1\n        /* \"#utility.yul\":2447:2459   */\n      revert\n        /* \"#utility.yul\":2398:2461   */\n    tag_64:\n        /* \"#utility.yul\":2345:2467   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2473:2595   */\n    tag_30:\n        /* \"#utility.yul\":2546:2570   */\n      tag_66\n        /* \"#utility.yul\":2564:2569   */\n      dup2\n        /* \"#utility.yul\":2546:2570   */\n      tag_45\n      jump\t// in\n    tag_66:\n        /* \"#utility.yul\":2539:2544   */\n      dup2\n        /* \"#utility.yul\":2536:2571   */\n      eq\n        /* \"#utility.yul\":2526:2589   */\n      tag_67\n      jumpi\n        /* \"#utility.yul\":2585:2586   */\n      0x00\n        /* \"#utility.yul\":2582:2583   */\n      dup1\n        /* \"#utility.yul\":2575:2587   */\n      revert\n        /* \"#utility.yul\":2526:2589   */\n    tag_67:\n        /* \"#utility.yul\":2473:2595   */\n      pop\n      jump\t// out\n\n    auxdata: 0xa264697066735822122020f2e64a031bb57705001bf5d6fc134c46af87e5f36368788d67f9698982216e64736f6c63430008070033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_16": {
									"entryPoint": null,
									"id": 16,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"abi_decode_t_uint256_fromMemory": {
									"entryPoint": 63,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256_fromMemory": {
									"entryPoint": 84,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"cleanup_t_uint256": {
									"entryPoint": 129,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 139,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"validator_revert_t_uint256": {
									"entryPoint": 144,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:1048:2",
										"statements": [
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "70:80:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "80:22:2",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "95:6:2"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "89:5:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "89:13:2"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "80:5:2"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "138:5:2"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "111:26:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "111:33:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "111:33:2"
														}
													]
												},
												"name": "abi_decode_t_uint256_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "48:6:2",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "56:3:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "64:5:2",
														"type": ""
													}
												],
												"src": "7:143:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "233:274:2",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "279:83:2",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "281:77:2"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "281:79:2"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "281:79:2"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "254:7:2"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "263:9:2"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "250:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "250:23:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "275:2:2",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "246:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "246:32:2"
															},
															"nodeType": "YulIf",
															"src": "243:119:2"
														},
														{
															"nodeType": "YulBlock",
															"src": "372:128:2",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "387:15:2",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "401:1:2",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "391:6:2",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "416:74:2",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "462:9:2"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "473:6:2"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "458:3:2"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "458:22:2"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "482:7:2"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256_fromMemory",
																			"nodeType": "YulIdentifier",
																			"src": "426:31:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "426:64:2"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "416:6:2"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "203:9:2",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "214:7:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "226:6:2",
														"type": ""
													}
												],
												"src": "156:351:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "553:35:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "563:19:2",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "579:2:2",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "573:5:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "573:9:2"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nodeType": "YulIdentifier",
																	"src": "563:6:2"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "546:6:2",
														"type": ""
													}
												],
												"src": "513:75:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "639:32:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "649:16:2",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "660:5:2"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "649:7:2"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "621:5:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "631:7:2",
														"type": ""
													}
												],
												"src": "594:77:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "766:28:2",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "783:1:2",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "786:1:2",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "776:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "776:12:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "776:12:2"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nodeType": "YulFunctionDefinition",
												"src": "677:117:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "889:28:2",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "906:1:2",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "909:1:2",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "899:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "899:12:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "899:12:2"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nodeType": "YulFunctionDefinition",
												"src": "800:117:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "966:79:2",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1023:16:2",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1032:1:2",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1035:1:2",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1025:6:2"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1025:12:2"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1025:12:2"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "989:5:2"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "1014:5:2"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nodeType": "YulIdentifier",
																					"src": "996:17:2"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "996:24:2"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "986:2:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "986:35:2"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "979:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "979:43:2"
															},
															"nodeType": "YulIf",
															"src": "976:63:2"
														}
													]
												},
												"name": "validator_revert_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "959:5:2",
														"type": ""
													}
												],
												"src": "923:122:2"
											}
										]
									},
									"contents": "{\n\n    function abi_decode_t_uint256_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_uint256_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n}\n",
									"id": 2,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b5060405161031c38038061031c83398181016040528101906100329190610054565b80600081905550506100a7565b60008151905061004e81610090565b92915050565b60006020828403121561006a5761006961008b565b5b60006100788482850161003f565b91505092915050565b6000819050919050565b600080fd5b61009981610081565b81146100a457600080fd5b50565b610266806100b66000396000f3fe608060405234801561001057600080fd5b50600436106100415760003560e01c8063034a677814610046578063a035b1fe14610076578063af57739214610094575b600080fd5b610060600480360381019061005b919061010e565b6100c4565b60405161006d919061019a565b60405180910390f35b61007e6100d1565b60405161008b919061019a565b60405180910390f35b6100ae60048036038101906100a9919061010e565b6100d7565b6040516100bb919061017f565b60405180910390f35b6000805490509392505050565b60005481565b6000600190509392505050565b6000813590506100f381610202565b92915050565b60008135905061010881610219565b92915050565b600080600060608486031215610127576101266101fd565b5b6000610135868287016100f9565b9350506020610146868287016100e4565b9250506040610157868287016100e4565b9150509250925092565b61016a816101c7565b82525050565b610179816101f3565b82525050565b60006020820190506101946000830184610161565b92915050565b60006020820190506101af6000830184610170565b92915050565b60006101c0826101d3565b9050919050565b60008115159050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b600080fd5b61020b816101b5565b811461021657600080fd5b50565b610222816101f3565b811461022d57600080fd5b5056fea264697066735822122020f2e64a031bb57705001bf5d6fc134c46af87e5f36368788d67f9698982216e64736f6c63430008070033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH2 0x31C CODESIZE SUB DUP1 PUSH2 0x31C DUP4 CODECOPY DUP2 DUP2 ADD PUSH1 0x40 MSTORE DUP2 ADD SWAP1 PUSH2 0x32 SWAP2 SWAP1 PUSH2 0x54 JUMP JUMPDEST DUP1 PUSH1 0x0 DUP2 SWAP1 SSTORE POP POP PUSH2 0xA7 JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x4E DUP2 PUSH2 0x90 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x6A JUMPI PUSH2 0x69 PUSH2 0x8B JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x78 DUP5 DUP3 DUP6 ADD PUSH2 0x3F JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x99 DUP2 PUSH2 0x81 JUMP JUMPDEST DUP2 EQ PUSH2 0xA4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH2 0x266 DUP1 PUSH2 0xB6 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x41 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x34A6778 EQ PUSH2 0x46 JUMPI DUP1 PUSH4 0xA035B1FE EQ PUSH2 0x76 JUMPI DUP1 PUSH4 0xAF577392 EQ PUSH2 0x94 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x60 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x5B SWAP2 SWAP1 PUSH2 0x10E JUMP JUMPDEST PUSH2 0xC4 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x6D SWAP2 SWAP1 PUSH2 0x19A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x7E PUSH2 0xD1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x8B SWAP2 SWAP1 PUSH2 0x19A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xAE PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xA9 SWAP2 SWAP1 PUSH2 0x10E JUMP JUMPDEST PUSH2 0xD7 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xBB SWAP2 SWAP1 PUSH2 0x17F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x0 DUP1 SLOAD SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xF3 DUP2 PUSH2 0x202 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x108 DUP2 PUSH2 0x219 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x127 JUMPI PUSH2 0x126 PUSH2 0x1FD JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x135 DUP7 DUP3 DUP8 ADD PUSH2 0xF9 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x146 DUP7 DUP3 DUP8 ADD PUSH2 0xE4 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0x157 DUP7 DUP3 DUP8 ADD PUSH2 0xE4 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH2 0x16A DUP2 PUSH2 0x1C7 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x179 DUP2 PUSH2 0x1F3 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x194 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x161 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1AF PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x170 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1C0 DUP3 PUSH2 0x1D3 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x20B DUP2 PUSH2 0x1B5 JUMP JUMPDEST DUP2 EQ PUSH2 0x216 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH2 0x222 DUP2 PUSH2 0x1F3 JUMP JUMPDEST DUP2 EQ PUSH2 0x22D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 KECCAK256 CALLCODE 0xE6 0x4A SUB SHL 0xB5 PUSH24 0x5001BF5D6FC134C46AF87E5F36368788D67F9698982216E PUSH5 0x736F6C6343 STOP ADDMOD SMOD STOP CALLER ",
							"sourceMap": "70:450:0:-:0;;;159:59;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;205:6;197:5;:14;;;;159:59;70:450;;7:143:2;64:5;95:6;89:13;80:22;;111:33;138:5;111:33;:::i;:::-;7:143;;;;:::o;156:351::-;226:6;275:2;263:9;254:7;250:23;246:32;243:119;;;281:79;;:::i;:::-;243:119;401:1;426:64;482:7;473:6;462:9;458:22;426:64;:::i;:::-;416:74;;372:128;156:351;;;;:::o;594:77::-;631:7;660:5;649:16;;594:77;;;:::o;800:117::-;909:1;906;899:12;923:122;996:24;1014:5;996:24;:::i;:::-;989:5;986:35;976:63;;1035:1;1032;1025:12;976:63;923:122;:::o;70:450:0:-;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@getAmountForToken_31": {
									"entryPoint": 196,
									"id": 31,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"@isTokenAccepted_46": {
									"entryPoint": 215,
									"id": 46,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"@price_6": {
									"entryPoint": 209,
									"id": 6,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"abi_decode_t_address": {
									"entryPoint": 228,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_uint256": {
									"entryPoint": 249,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256t_addresst_address": {
									"entryPoint": 270,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 3
								},
								"abi_encode_t_bool_to_t_bool_fromStack": {
									"entryPoint": 353,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_uint256_to_t_uint256_fromStack": {
									"entryPoint": 368,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed": {
									"entryPoint": 383,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": 410,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"cleanup_t_address": {
									"entryPoint": 437,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_bool": {
									"entryPoint": 455,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 467,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint256": {
									"entryPoint": 499,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 509,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"validator_revert_t_address": {
									"entryPoint": 514,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_uint256": {
									"entryPoint": 537,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:2598:2",
										"statements": [
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "59:87:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "69:29:2",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "91:6:2"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "78:12:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "78:20:2"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "69:5:2"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "134:5:2"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nodeType": "YulIdentifier",
																	"src": "107:26:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "107:33:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "107:33:2"
														}
													]
												},
												"name": "abi_decode_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "37:6:2",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "45:3:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "53:5:2",
														"type": ""
													}
												],
												"src": "7:139:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "204:87:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "214:29:2",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "236:6:2"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "223:12:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "223:20:2"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "214:5:2"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "279:5:2"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "252:26:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "252:33:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "252:33:2"
														}
													]
												},
												"name": "abi_decode_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "182:6:2",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "190:3:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "198:5:2",
														"type": ""
													}
												],
												"src": "152:139:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "397:519:2",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "443:83:2",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "445:77:2"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "445:79:2"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "445:79:2"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "418:7:2"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "427:9:2"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "414:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "414:23:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "439:2:2",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "410:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "410:32:2"
															},
															"nodeType": "YulIf",
															"src": "407:119:2"
														},
														{
															"nodeType": "YulBlock",
															"src": "536:117:2",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "551:15:2",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "565:1:2",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "555:6:2",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "580:63:2",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "615:9:2"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "626:6:2"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "611:3:2"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "611:22:2"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "635:7:2"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "590:20:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "590:53:2"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "580:6:2"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "663:118:2",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "678:16:2",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "692:2:2",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "682:6:2",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "708:63:2",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "743:9:2"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "754:6:2"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "739:3:2"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "739:22:2"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "763:7:2"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "718:20:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "718:53:2"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nodeType": "YulIdentifier",
																			"src": "708:6:2"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "791:118:2",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "806:16:2",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "820:2:2",
																		"type": "",
																		"value": "64"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "810:6:2",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "836:63:2",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "871:9:2"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "882:6:2"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "867:3:2"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "867:22:2"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "891:7:2"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "846:20:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "846:53:2"
																	},
																	"variableNames": [
																		{
																			"name": "value2",
																			"nodeType": "YulIdentifier",
																			"src": "836:6:2"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256t_addresst_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "351:9:2",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "362:7:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "374:6:2",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "382:6:2",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "390:6:2",
														"type": ""
													}
												],
												"src": "297:619:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "981:50:2",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "998:3:2"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "1018:5:2"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_bool",
																			"nodeType": "YulIdentifier",
																			"src": "1003:14:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1003:21:2"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "991:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "991:34:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "991:34:2"
														}
													]
												},
												"name": "abi_encode_t_bool_to_t_bool_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "969:5:2",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "976:3:2",
														"type": ""
													}
												],
												"src": "922:109:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1102:53:2",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "1119:3:2"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "1142:5:2"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "1124:17:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1124:24:2"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1112:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "1112:37:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1112:37:2"
														}
													]
												},
												"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1090:5:2",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "1097:3:2",
														"type": ""
													}
												],
												"src": "1037:118:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1253:118:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1263:26:2",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1275:9:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1286:2:2",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1271:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "1271:18:2"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "1263:4:2"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "1337:6:2"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1350:9:2"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1361:1:2",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1346:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1346:17:2"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bool_to_t_bool_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "1299:37:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "1299:65:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1299:65:2"
														}
													]
												},
												"name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1225:9:2",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1237:6:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "1248:4:2",
														"type": ""
													}
												],
												"src": "1161:210:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1475:124:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1485:26:2",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1497:9:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1508:2:2",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1493:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "1493:18:2"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "1485:4:2"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "1565:6:2"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1578:9:2"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1589:1:2",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1574:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1574:17:2"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "1521:43:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "1521:71:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1521:71:2"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1447:9:2",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1459:6:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "1470:4:2",
														"type": ""
													}
												],
												"src": "1377:222:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1645:35:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1655:19:2",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1671:2:2",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "1665:5:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "1665:9:2"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nodeType": "YulIdentifier",
																	"src": "1655:6:2"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "1638:6:2",
														"type": ""
													}
												],
												"src": "1605:75:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1731:51:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1741:35:2",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "1770:5:2"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nodeType": "YulIdentifier",
																	"src": "1752:17:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "1752:24:2"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "1741:7:2"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1713:5:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "1723:7:2",
														"type": ""
													}
												],
												"src": "1686:96:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1830:48:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1840:32:2",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "1865:5:2"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nodeType": "YulIdentifier",
																			"src": "1858:6:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1858:13:2"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "1851:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "1851:21:2"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "1840:7:2"
																}
															]
														}
													]
												},
												"name": "cleanup_t_bool",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1812:5:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "1822:7:2",
														"type": ""
													}
												],
												"src": "1788:90:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1929:81:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1939:65:2",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "1954:5:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1961:42:2",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "1950:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "1950:54:2"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "1939:7:2"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1911:5:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "1921:7:2",
														"type": ""
													}
												],
												"src": "1884:126:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2061:32:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2071:16:2",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "2082:5:2"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "2071:7:2"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "2043:5:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "2053:7:2",
														"type": ""
													}
												],
												"src": "2016:77:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2188:28:2",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2205:1:2",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2208:1:2",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "2198:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "2198:12:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2198:12:2"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nodeType": "YulFunctionDefinition",
												"src": "2099:117:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2311:28:2",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2328:1:2",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2331:1:2",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "2321:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "2321:12:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2321:12:2"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nodeType": "YulFunctionDefinition",
												"src": "2222:117:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2388:79:2",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2445:16:2",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2454:1:2",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2457:1:2",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "2447:6:2"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2447:12:2"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2447:12:2"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "2411:5:2"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "2436:5:2"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nodeType": "YulIdentifier",
																					"src": "2418:17:2"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2418:24:2"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "2408:2:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2408:35:2"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "2401:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "2401:43:2"
															},
															"nodeType": "YulIf",
															"src": "2398:63:2"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "2381:5:2",
														"type": ""
													}
												],
												"src": "2345:122:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2516:79:2",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2573:16:2",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2582:1:2",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2585:1:2",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "2575:6:2"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2575:12:2"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2575:12:2"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "2539:5:2"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "2564:5:2"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nodeType": "YulIdentifier",
																					"src": "2546:17:2"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2546:24:2"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "2536:2:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2536:35:2"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "2529:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "2529:43:2"
															},
															"nodeType": "YulIf",
															"src": "2526:63:2"
														}
													]
												},
												"name": "validator_revert_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "2509:5:2",
														"type": ""
													}
												],
												"src": "2473:122:2"
											}
										]
									},
									"contents": "{\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_uint256t_addresst_address(headStart, dataEnd) -> value0, value1, value2 {\n        if slt(sub(dataEnd, headStart), 96) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_bool_to_t_bool_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bool(value))\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_bool_to_t_bool_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n}\n",
									"id": 2,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b50600436106100415760003560e01c8063034a677814610046578063a035b1fe14610076578063af57739214610094575b600080fd5b610060600480360381019061005b919061010e565b6100c4565b60405161006d919061019a565b60405180910390f35b61007e6100d1565b60405161008b919061019a565b60405180910390f35b6100ae60048036038101906100a9919061010e565b6100d7565b6040516100bb919061017f565b60405180910390f35b6000805490509392505050565b60005481565b6000600190509392505050565b6000813590506100f381610202565b92915050565b60008135905061010881610219565b92915050565b600080600060608486031215610127576101266101fd565b5b6000610135868287016100f9565b9350506020610146868287016100e4565b9250506040610157868287016100e4565b9150509250925092565b61016a816101c7565b82525050565b610179816101f3565b82525050565b60006020820190506101946000830184610161565b92915050565b60006020820190506101af6000830184610170565b92915050565b60006101c0826101d3565b9050919050565b60008115159050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b600080fd5b61020b816101b5565b811461021657600080fd5b50565b610222816101f3565b811461022d57600080fd5b5056fea264697066735822122020f2e64a031bb57705001bf5d6fc134c46af87e5f36368788d67f9698982216e64736f6c63430008070033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x41 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x34A6778 EQ PUSH2 0x46 JUMPI DUP1 PUSH4 0xA035B1FE EQ PUSH2 0x76 JUMPI DUP1 PUSH4 0xAF577392 EQ PUSH2 0x94 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x60 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x5B SWAP2 SWAP1 PUSH2 0x10E JUMP JUMPDEST PUSH2 0xC4 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x6D SWAP2 SWAP1 PUSH2 0x19A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x7E PUSH2 0xD1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x8B SWAP2 SWAP1 PUSH2 0x19A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xAE PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xA9 SWAP2 SWAP1 PUSH2 0x10E JUMP JUMPDEST PUSH2 0xD7 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xBB SWAP2 SWAP1 PUSH2 0x17F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x0 DUP1 SLOAD SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xF3 DUP2 PUSH2 0x202 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x108 DUP2 PUSH2 0x219 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x127 JUMPI PUSH2 0x126 PUSH2 0x1FD JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x135 DUP7 DUP3 DUP8 ADD PUSH2 0xF9 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x146 DUP7 DUP3 DUP8 ADD PUSH2 0xE4 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0x157 DUP7 DUP3 DUP8 ADD PUSH2 0xE4 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH2 0x16A DUP2 PUSH2 0x1C7 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x179 DUP2 PUSH2 0x1F3 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x194 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x161 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1AF PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x170 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1C0 DUP3 PUSH2 0x1D3 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x20B DUP2 PUSH2 0x1B5 JUMP JUMPDEST DUP2 EQ PUSH2 0x216 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH2 0x222 DUP2 PUSH2 0x1F3 JUMP JUMPDEST DUP2 EQ PUSH2 0x22D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 KECCAK256 CALLCODE 0xE6 0x4A SUB SHL 0xB5 PUSH24 0x5001BF5D6FC134C46AF87E5F36368788D67F9698982216E PUSH5 0x736F6C6343 STOP ADDMOD SMOD STOP CALLER ",
							"sourceMap": "70:450:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;224:148;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;132:20;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;378:140;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;224:148;334:7;360:5;;353:12;;224:148;;;;;:::o;132:20::-;;;;:::o;378:140::-;484:4;507;500:11;;378:140;;;;;:::o;7:139:2:-;53:5;91:6;78:20;69:29;;107:33;134:5;107:33;:::i;:::-;7:139;;;;:::o;152:::-;198:5;236:6;223:20;214:29;;252:33;279:5;252:33;:::i;:::-;152:139;;;;:::o;297:619::-;374:6;382;390;439:2;427:9;418:7;414:23;410:32;407:119;;;445:79;;:::i;:::-;407:119;565:1;590:53;635:7;626:6;615:9;611:22;590:53;:::i;:::-;580:63;;536:117;692:2;718:53;763:7;754:6;743:9;739:22;718:53;:::i;:::-;708:63;;663:118;820:2;846:53;891:7;882:6;871:9;867:22;846:53;:::i;:::-;836:63;;791:118;297:619;;;;;:::o;922:109::-;1003:21;1018:5;1003:21;:::i;:::-;998:3;991:34;922:109;;:::o;1037:118::-;1124:24;1142:5;1124:24;:::i;:::-;1119:3;1112:37;1037:118;;:::o;1161:210::-;1248:4;1286:2;1275:9;1271:18;1263:26;;1299:65;1361:1;1350:9;1346:17;1337:6;1299:65;:::i;:::-;1161:210;;;;:::o;1377:222::-;1470:4;1508:2;1497:9;1493:18;1485:26;;1521:71;1589:1;1578:9;1574:17;1565:6;1521:71;:::i;:::-;1377:222;;;;:::o;1686:96::-;1723:7;1752:24;1770:5;1752:24;:::i;:::-;1741:35;;1686:96;;;:::o;1788:90::-;1822:7;1865:5;1858:13;1851:21;1840:32;;1788:90;;;:::o;1884:126::-;1921:7;1961:42;1954:5;1950:54;1939:65;;1884:126;;;:::o;2016:77::-;2053:7;2082:5;2071:16;;2016:77;;;:::o;2222:117::-;2331:1;2328;2321:12;2345:122;2418:24;2436:5;2418:24;:::i;:::-;2411:5;2408:35;2398:63;;2457:1;2454;2447:12;2398:63;2345:122;:::o;2473:::-;2546:24;2564:5;2546:24;:::i;:::-;2539:5;2536:35;2526:63;;2585:1;2582;2575:12;2526:63;2473:122;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "122800",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"getAmountForToken(uint256,address,address)": "infinite",
								"isTokenAccepted(uint256,address,address)": "infinite",
								"price()": "2429"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 70,
									"end": 520,
									"name": "PUSH",
									"source": 0,
									"value": "80"
								},
								{
									"begin": 70,
									"end": 520,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 70,
									"end": 520,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 159,
									"end": 218,
									"name": "CALLVALUE",
									"source": 0
								},
								{
									"begin": 159,
									"end": 218,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 159,
									"end": 218,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 159,
									"end": 218,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 159,
									"end": 218,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 159,
									"end": 218,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 159,
									"end": 218,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 159,
									"end": 218,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 159,
									"end": 218,
									"name": "tag",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 159,
									"end": 218,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 159,
									"end": 218,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 159,
									"end": 218,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 159,
									"end": 218,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 159,
									"end": 218,
									"name": "PUSHSIZE",
									"source": 0
								},
								{
									"begin": 159,
									"end": 218,
									"name": "CODESIZE",
									"source": 0
								},
								{
									"begin": 159,
									"end": 218,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 159,
									"end": 218,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 159,
									"end": 218,
									"name": "PUSHSIZE",
									"source": 0
								},
								{
									"begin": 159,
									"end": 218,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 159,
									"end": 218,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 159,
									"end": 218,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 159,
									"end": 218,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 159,
									"end": 218,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 159,
									"end": 218,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 159,
									"end": 218,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 159,
									"end": 218,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 159,
									"end": 218,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 159,
									"end": 218,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 159,
									"end": 218,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "2"
								},
								{
									"begin": 159,
									"end": 218,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 159,
									"end": 218,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 159,
									"end": 218,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "3"
								},
								{
									"begin": 159,
									"end": 218,
									"name": "JUMP",
									"source": 0,
									"value": "[in]"
								},
								{
									"begin": 159,
									"end": 218,
									"name": "tag",
									"source": 0,
									"value": "2"
								},
								{
									"begin": 159,
									"end": 218,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 205,
									"end": 211,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 197,
									"end": 202,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 197,
									"end": 211,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 197,
									"end": 211,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 197,
									"end": 211,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 197,
									"end": 211,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 159,
									"end": 218,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 70,
									"end": 520,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "6"
								},
								{
									"begin": 70,
									"end": 520,
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 7,
									"end": 150,
									"name": "tag",
									"source": 2,
									"value": "8"
								},
								{
									"begin": 7,
									"end": 150,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 64,
									"end": 69,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 95,
									"end": 101,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 89,
									"end": 102,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": 80,
									"end": 102,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 80,
									"end": 102,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 111,
									"end": 144,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "10"
								},
								{
									"begin": 138,
									"end": 143,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 111,
									"end": 144,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "11"
								},
								{
									"begin": 111,
									"end": 144,
									"name": "JUMP",
									"source": 2,
									"value": "[in]"
								},
								{
									"begin": 111,
									"end": 144,
									"name": "tag",
									"source": 2,
									"value": "10"
								},
								{
									"begin": 111,
									"end": 144,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 7,
									"end": 150,
									"name": "SWAP3",
									"source": 2
								},
								{
									"begin": 7,
									"end": 150,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 7,
									"end": 150,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 7,
									"end": 150,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 7,
									"end": 150,
									"name": "JUMP",
									"source": 2,
									"value": "[out]"
								},
								{
									"begin": 156,
									"end": 507,
									"name": "tag",
									"source": 2,
									"value": "3"
								},
								{
									"begin": 156,
									"end": 507,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 226,
									"end": 232,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 275,
									"end": 277,
									"name": "PUSH",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 263,
									"end": 272,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 254,
									"end": 261,
									"name": "DUP5",
									"source": 2
								},
								{
									"begin": 250,
									"end": 273,
									"name": "SUB",
									"source": 2
								},
								{
									"begin": 246,
									"end": 278,
									"name": "SLT",
									"source": 2
								},
								{
									"begin": 243,
									"end": 362,
									"name": "ISZERO",
									"source": 2
								},
								{
									"begin": 243,
									"end": 362,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "13"
								},
								{
									"begin": 243,
									"end": 362,
									"name": "JUMPI",
									"source": 2
								},
								{
									"begin": 281,
									"end": 360,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "14"
								},
								{
									"begin": 281,
									"end": 360,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "15"
								},
								{
									"begin": 281,
									"end": 360,
									"name": "JUMP",
									"source": 2,
									"value": "[in]"
								},
								{
									"begin": 281,
									"end": 360,
									"name": "tag",
									"source": 2,
									"value": "14"
								},
								{
									"begin": 281,
									"end": 360,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 243,
									"end": 362,
									"name": "tag",
									"source": 2,
									"value": "13"
								},
								{
									"begin": 243,
									"end": 362,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 401,
									"end": 402,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 426,
									"end": 490,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "16"
								},
								{
									"begin": 482,
									"end": 489,
									"name": "DUP5",
									"source": 2
								},
								{
									"begin": 473,
									"end": 479,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 462,
									"end": 471,
									"name": "DUP6",
									"source": 2
								},
								{
									"begin": 458,
									"end": 480,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 426,
									"end": 490,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "8"
								},
								{
									"begin": 426,
									"end": 490,
									"name": "JUMP",
									"source": 2,
									"value": "[in]"
								},
								{
									"begin": 426,
									"end": 490,
									"name": "tag",
									"source": 2,
									"value": "16"
								},
								{
									"begin": 426,
									"end": 490,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 416,
									"end": 490,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 416,
									"end": 490,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 372,
									"end": 500,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 156,
									"end": 507,
									"name": "SWAP3",
									"source": 2
								},
								{
									"begin": 156,
									"end": 507,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 156,
									"end": 507,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 156,
									"end": 507,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 156,
									"end": 507,
									"name": "JUMP",
									"source": 2,
									"value": "[out]"
								},
								{
									"begin": 594,
									"end": 671,
									"name": "tag",
									"source": 2,
									"value": "19"
								},
								{
									"begin": 594,
									"end": 671,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 631,
									"end": 638,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 660,
									"end": 665,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 649,
									"end": 665,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 649,
									"end": 665,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 594,
									"end": 671,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 594,
									"end": 671,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 594,
									"end": 671,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 594,
									"end": 671,
									"name": "JUMP",
									"source": 2,
									"value": "[out]"
								},
								{
									"begin": 800,
									"end": 917,
									"name": "tag",
									"source": 2,
									"value": "15"
								},
								{
									"begin": 800,
									"end": 917,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 909,
									"end": 910,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 906,
									"end": 907,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 899,
									"end": 911,
									"name": "REVERT",
									"source": 2
								},
								{
									"begin": 923,
									"end": 1045,
									"name": "tag",
									"source": 2,
									"value": "11"
								},
								{
									"begin": 923,
									"end": 1045,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 996,
									"end": 1020,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "25"
								},
								{
									"begin": 1014,
									"end": 1019,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 996,
									"end": 1020,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "19"
								},
								{
									"begin": 996,
									"end": 1020,
									"name": "JUMP",
									"source": 2,
									"value": "[in]"
								},
								{
									"begin": 996,
									"end": 1020,
									"name": "tag",
									"source": 2,
									"value": "25"
								},
								{
									"begin": 996,
									"end": 1020,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 989,
									"end": 994,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 986,
									"end": 1021,
									"name": "EQ",
									"source": 2
								},
								{
									"begin": 976,
									"end": 1039,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "26"
								},
								{
									"begin": 976,
									"end": 1039,
									"name": "JUMPI",
									"source": 2
								},
								{
									"begin": 1035,
									"end": 1036,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 1032,
									"end": 1033,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 1025,
									"end": 1037,
									"name": "REVERT",
									"source": 2
								},
								{
									"begin": 976,
									"end": 1039,
									"name": "tag",
									"source": 2,
									"value": "26"
								},
								{
									"begin": 976,
									"end": 1039,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 923,
									"end": 1045,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 923,
									"end": 1045,
									"name": "JUMP",
									"source": 2,
									"value": "[out]"
								},
								{
									"begin": 70,
									"end": 520,
									"name": "tag",
									"source": 0,
									"value": "6"
								},
								{
									"begin": 70,
									"end": 520,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 70,
									"end": 520,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 70,
									"end": 520,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 70,
									"end": 520,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 70,
									"end": 520,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 70,
									"end": 520,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 70,
									"end": 520,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 70,
									"end": 520,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a264697066735822122020f2e64a031bb57705001bf5d6fc134c46af87e5f36368788d67f9698982216e64736f6c63430008070033",
									".code": [
										{
											"begin": 70,
											"end": 520,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 70,
											"end": 520,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 70,
											"end": 520,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 70,
											"end": 520,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 70,
											"end": 520,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 70,
											"end": 520,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 70,
											"end": 520,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 70,
											"end": 520,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 70,
											"end": 520,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 70,
											"end": 520,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 70,
											"end": 520,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 70,
											"end": 520,
											"name": "tag",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 70,
											"end": 520,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 70,
											"end": 520,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 70,
											"end": 520,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 70,
											"end": 520,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 70,
											"end": 520,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 70,
											"end": 520,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 70,
											"end": 520,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 70,
											"end": 520,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 70,
											"end": 520,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 70,
											"end": 520,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 70,
											"end": 520,
											"name": "SHR",
											"source": 0
										},
										{
											"begin": 70,
											"end": 520,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 70,
											"end": 520,
											"name": "PUSH",
											"source": 0,
											"value": "34A6778"
										},
										{
											"begin": 70,
											"end": 520,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 70,
											"end": 520,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 70,
											"end": 520,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 70,
											"end": 520,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 70,
											"end": 520,
											"name": "PUSH",
											"source": 0,
											"value": "A035B1FE"
										},
										{
											"begin": 70,
											"end": 520,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 70,
											"end": 520,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 70,
											"end": 520,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 70,
											"end": 520,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 70,
											"end": 520,
											"name": "PUSH",
											"source": 0,
											"value": "AF577392"
										},
										{
											"begin": 70,
											"end": 520,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 70,
											"end": 520,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 70,
											"end": 520,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 70,
											"end": 520,
											"name": "tag",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 70,
											"end": 520,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 70,
											"end": 520,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 70,
											"end": 520,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 70,
											"end": 520,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 224,
											"end": 372,
											"name": "tag",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 224,
											"end": 372,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 224,
											"end": 372,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 224,
											"end": 372,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 224,
											"end": 372,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 224,
											"end": 372,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 224,
											"end": 372,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 224,
											"end": 372,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 224,
											"end": 372,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 224,
											"end": 372,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 224,
											"end": 372,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 224,
											"end": 372,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 224,
											"end": 372,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 224,
											"end": 372,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 224,
											"end": 372,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 224,
											"end": 372,
											"name": "tag",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 224,
											"end": 372,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 224,
											"end": 372,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 224,
											"end": 372,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 224,
											"end": 372,
											"name": "tag",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 224,
											"end": 372,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 224,
											"end": 372,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 224,
											"end": 372,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 224,
											"end": 372,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 224,
											"end": 372,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 224,
											"end": 372,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 224,
											"end": 372,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 224,
											"end": 372,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 224,
											"end": 372,
											"name": "tag",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 224,
											"end": 372,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 224,
											"end": 372,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 224,
											"end": 372,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 224,
											"end": 372,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 224,
											"end": 372,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 224,
											"end": 372,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 224,
											"end": 372,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 224,
											"end": 372,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 132,
											"end": 152,
											"name": "tag",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 132,
											"end": 152,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 132,
											"end": 152,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 132,
											"end": 152,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 132,
											"end": 152,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 132,
											"end": 152,
											"name": "tag",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 132,
											"end": 152,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 132,
											"end": 152,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 132,
											"end": 152,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 132,
											"end": 152,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 132,
											"end": 152,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 132,
											"end": 152,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 132,
											"end": 152,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 132,
											"end": 152,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 132,
											"end": 152,
											"name": "tag",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 132,
											"end": 152,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 132,
											"end": 152,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 132,
											"end": 152,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 132,
											"end": 152,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 132,
											"end": 152,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 132,
											"end": 152,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 132,
											"end": 152,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 132,
											"end": 152,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 378,
											"end": 518,
											"name": "tag",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 378,
											"end": 518,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 378,
											"end": 518,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 378,
											"end": 518,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 378,
											"end": 518,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 378,
											"end": 518,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 378,
											"end": 518,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 378,
											"end": 518,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 378,
											"end": 518,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 378,
											"end": 518,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 378,
											"end": 518,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 378,
											"end": 518,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 378,
											"end": 518,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 378,
											"end": 518,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 378,
											"end": 518,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 378,
											"end": 518,
											"name": "tag",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 378,
											"end": 518,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 378,
											"end": 518,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 378,
											"end": 518,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 378,
											"end": 518,
											"name": "tag",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 378,
											"end": 518,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 378,
											"end": 518,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 378,
											"end": 518,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 378,
											"end": 518,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 378,
											"end": 518,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 378,
											"end": 518,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 378,
											"end": 518,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 378,
											"end": 518,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 378,
											"end": 518,
											"name": "tag",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 378,
											"end": 518,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 378,
											"end": 518,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 378,
											"end": 518,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 378,
											"end": 518,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 378,
											"end": 518,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 378,
											"end": 518,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 378,
											"end": 518,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 378,
											"end": 518,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 224,
											"end": 372,
											"name": "tag",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 224,
											"end": 372,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 334,
											"end": 341,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 360,
											"end": 365,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 360,
											"end": 365,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 353,
											"end": 365,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 353,
											"end": 365,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 224,
											"end": 372,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 224,
											"end": 372,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 224,
											"end": 372,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 224,
											"end": 372,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 224,
											"end": 372,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 224,
											"end": 372,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 132,
											"end": 152,
											"name": "tag",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 132,
											"end": 152,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 132,
											"end": 152,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 132,
											"end": 152,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 132,
											"end": 152,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 132,
											"end": 152,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 378,
											"end": 518,
											"name": "tag",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 378,
											"end": 518,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 484,
											"end": 488,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 507,
											"end": 511,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 500,
											"end": 511,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 500,
											"end": 511,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 378,
											"end": 518,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 378,
											"end": 518,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 378,
											"end": 518,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 378,
											"end": 518,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 378,
											"end": 518,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 378,
											"end": 518,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 7,
											"end": 146,
											"name": "tag",
											"source": 2,
											"value": "23"
										},
										{
											"begin": 7,
											"end": 146,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 53,
											"end": 58,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 91,
											"end": 97,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 78,
											"end": 98,
											"name": "CALLDATALOAD",
											"source": 2
										},
										{
											"begin": 69,
											"end": 98,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 69,
											"end": 98,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 107,
											"end": 140,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "25"
										},
										{
											"begin": 134,
											"end": 139,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 107,
											"end": 140,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "26"
										},
										{
											"begin": 107,
											"end": 140,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 107,
											"end": 140,
											"name": "tag",
											"source": 2,
											"value": "25"
										},
										{
											"begin": 107,
											"end": 140,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 7,
											"end": 146,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 7,
											"end": 146,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 7,
											"end": 146,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 7,
											"end": 146,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 7,
											"end": 146,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 152,
											"end": 291,
											"name": "tag",
											"source": 2,
											"value": "27"
										},
										{
											"begin": 152,
											"end": 291,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 198,
											"end": 203,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 236,
											"end": 242,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 223,
											"end": 243,
											"name": "CALLDATALOAD",
											"source": 2
										},
										{
											"begin": 214,
											"end": 243,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 214,
											"end": 243,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 252,
											"end": 285,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "29"
										},
										{
											"begin": 279,
											"end": 284,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 252,
											"end": 285,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "30"
										},
										{
											"begin": 252,
											"end": 285,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 252,
											"end": 285,
											"name": "tag",
											"source": 2,
											"value": "29"
										},
										{
											"begin": 252,
											"end": 285,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 152,
											"end": 291,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 152,
											"end": 291,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 152,
											"end": 291,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 152,
											"end": 291,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 152,
											"end": 291,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 297,
											"end": 916,
											"name": "tag",
											"source": 2,
											"value": "8"
										},
										{
											"begin": 297,
											"end": 916,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 374,
											"end": 380,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 382,
											"end": 388,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 390,
											"end": 396,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 439,
											"end": 441,
											"name": "PUSH",
											"source": 2,
											"value": "60"
										},
										{
											"begin": 427,
											"end": 436,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 418,
											"end": 425,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 414,
											"end": 437,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 410,
											"end": 442,
											"name": "SLT",
											"source": 2
										},
										{
											"begin": 407,
											"end": 526,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 407,
											"end": 526,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "32"
										},
										{
											"begin": 407,
											"end": 526,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 445,
											"end": 524,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "33"
										},
										{
											"begin": 445,
											"end": 524,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "34"
										},
										{
											"begin": 445,
											"end": 524,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 445,
											"end": 524,
											"name": "tag",
											"source": 2,
											"value": "33"
										},
										{
											"begin": 445,
											"end": 524,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 407,
											"end": 526,
											"name": "tag",
											"source": 2,
											"value": "32"
										},
										{
											"begin": 407,
											"end": 526,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 565,
											"end": 566,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 590,
											"end": 643,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "35"
										},
										{
											"begin": 635,
											"end": 642,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 626,
											"end": 632,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 615,
											"end": 624,
											"name": "DUP8",
											"source": 2
										},
										{
											"begin": 611,
											"end": 633,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 590,
											"end": 643,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "27"
										},
										{
											"begin": 590,
											"end": 643,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 590,
											"end": 643,
											"name": "tag",
											"source": 2,
											"value": "35"
										},
										{
											"begin": 590,
											"end": 643,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 580,
											"end": 643,
											"name": "SWAP4",
											"source": 2
										},
										{
											"begin": 580,
											"end": 643,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 536,
											"end": 653,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 692,
											"end": 694,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 718,
											"end": 771,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "36"
										},
										{
											"begin": 763,
											"end": 770,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 754,
											"end": 760,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 743,
											"end": 752,
											"name": "DUP8",
											"source": 2
										},
										{
											"begin": 739,
											"end": 761,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 718,
											"end": 771,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "23"
										},
										{
											"begin": 718,
											"end": 771,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 718,
											"end": 771,
											"name": "tag",
											"source": 2,
											"value": "36"
										},
										{
											"begin": 718,
											"end": 771,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 708,
											"end": 771,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 708,
											"end": 771,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 663,
											"end": 781,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 820,
											"end": 822,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 846,
											"end": 899,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "37"
										},
										{
											"begin": 891,
											"end": 898,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 882,
											"end": 888,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 871,
											"end": 880,
											"name": "DUP8",
											"source": 2
										},
										{
											"begin": 867,
											"end": 889,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 846,
											"end": 899,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "23"
										},
										{
											"begin": 846,
											"end": 899,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 846,
											"end": 899,
											"name": "tag",
											"source": 2,
											"value": "37"
										},
										{
											"begin": 846,
											"end": 899,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 836,
											"end": 899,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 836,
											"end": 899,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 791,
											"end": 909,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 297,
											"end": 916,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 297,
											"end": 916,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 297,
											"end": 916,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 297,
											"end": 916,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 297,
											"end": 916,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 297,
											"end": 916,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 922,
											"end": 1031,
											"name": "tag",
											"source": 2,
											"value": "38"
										},
										{
											"begin": 922,
											"end": 1031,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1003,
											"end": 1024,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1018,
											"end": 1023,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1003,
											"end": 1024,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "41"
										},
										{
											"begin": 1003,
											"end": 1024,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 1003,
											"end": 1024,
											"name": "tag",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1003,
											"end": 1024,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 998,
											"end": 1001,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 991,
											"end": 1025,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 922,
											"end": 1031,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 922,
											"end": 1031,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 922,
											"end": 1031,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 1037,
											"end": 1155,
											"name": "tag",
											"source": 2,
											"value": "42"
										},
										{
											"begin": 1037,
											"end": 1155,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1124,
											"end": 1148,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "44"
										},
										{
											"begin": 1142,
											"end": 1147,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1124,
											"end": 1148,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "45"
										},
										{
											"begin": 1124,
											"end": 1148,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 1124,
											"end": 1148,
											"name": "tag",
											"source": 2,
											"value": "44"
										},
										{
											"begin": 1124,
											"end": 1148,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1119,
											"end": 1122,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1112,
											"end": 1149,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1037,
											"end": 1155,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1037,
											"end": 1155,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1037,
											"end": 1155,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 1161,
											"end": 1371,
											"name": "tag",
											"source": 2,
											"value": "19"
										},
										{
											"begin": 1161,
											"end": 1371,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1248,
											"end": 1252,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1286,
											"end": 1288,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1275,
											"end": 1284,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1271,
											"end": 1289,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1263,
											"end": 1289,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1263,
											"end": 1289,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1299,
											"end": 1364,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "47"
										},
										{
											"begin": 1361,
											"end": 1362,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1350,
											"end": 1359,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 1346,
											"end": 1363,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1337,
											"end": 1343,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 1299,
											"end": 1364,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "38"
										},
										{
											"begin": 1299,
											"end": 1364,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 1299,
											"end": 1364,
											"name": "tag",
											"source": 2,
											"value": "47"
										},
										{
											"begin": 1299,
											"end": 1364,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1161,
											"end": 1371,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 1161,
											"end": 1371,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1161,
											"end": 1371,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1161,
											"end": 1371,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1161,
											"end": 1371,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 1377,
											"end": 1599,
											"name": "tag",
											"source": 2,
											"value": "11"
										},
										{
											"begin": 1377,
											"end": 1599,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1470,
											"end": 1474,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1508,
											"end": 1510,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1497,
											"end": 1506,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1493,
											"end": 1511,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1485,
											"end": 1511,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1485,
											"end": 1511,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1521,
											"end": 1592,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "49"
										},
										{
											"begin": 1589,
											"end": 1590,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1578,
											"end": 1587,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 1574,
											"end": 1591,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1565,
											"end": 1571,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 1521,
											"end": 1592,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "42"
										},
										{
											"begin": 1521,
											"end": 1592,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 1521,
											"end": 1592,
											"name": "tag",
											"source": 2,
											"value": "49"
										},
										{
											"begin": 1521,
											"end": 1592,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1377,
											"end": 1599,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 1377,
											"end": 1599,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1377,
											"end": 1599,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1377,
											"end": 1599,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1377,
											"end": 1599,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 1686,
											"end": 1782,
											"name": "tag",
											"source": 2,
											"value": "52"
										},
										{
											"begin": 1686,
											"end": 1782,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1723,
											"end": 1730,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1752,
											"end": 1776,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "54"
										},
										{
											"begin": 1770,
											"end": 1775,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1752,
											"end": 1776,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "55"
										},
										{
											"begin": 1752,
											"end": 1776,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 1752,
											"end": 1776,
											"name": "tag",
											"source": 2,
											"value": "54"
										},
										{
											"begin": 1752,
											"end": 1776,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1741,
											"end": 1776,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1741,
											"end": 1776,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1686,
											"end": 1782,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1686,
											"end": 1782,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1686,
											"end": 1782,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1686,
											"end": 1782,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 1788,
											"end": 1878,
											"name": "tag",
											"source": 2,
											"value": "41"
										},
										{
											"begin": 1788,
											"end": 1878,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1822,
											"end": 1829,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1865,
											"end": 1870,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1858,
											"end": 1871,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 1851,
											"end": 1872,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 1840,
											"end": 1872,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1840,
											"end": 1872,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1788,
											"end": 1878,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1788,
											"end": 1878,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1788,
											"end": 1878,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1788,
											"end": 1878,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 1884,
											"end": 2010,
											"name": "tag",
											"source": 2,
											"value": "55"
										},
										{
											"begin": 1884,
											"end": 2010,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1921,
											"end": 1928,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1961,
											"end": 2003,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1954,
											"end": 1959,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1950,
											"end": 2004,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1939,
											"end": 2004,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1939,
											"end": 2004,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1884,
											"end": 2010,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1884,
											"end": 2010,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1884,
											"end": 2010,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1884,
											"end": 2010,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 2016,
											"end": 2093,
											"name": "tag",
											"source": 2,
											"value": "45"
										},
										{
											"begin": 2016,
											"end": 2093,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2060,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2082,
											"end": 2087,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2071,
											"end": 2087,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2071,
											"end": 2087,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2016,
											"end": 2093,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2016,
											"end": 2093,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2016,
											"end": 2093,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2016,
											"end": 2093,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 2222,
											"end": 2339,
											"name": "tag",
											"source": 2,
											"value": "34"
										},
										{
											"begin": 2222,
											"end": 2339,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2331,
											"end": 2332,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2328,
											"end": 2329,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2321,
											"end": 2333,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 2345,
											"end": 2467,
											"name": "tag",
											"source": 2,
											"value": "26"
										},
										{
											"begin": 2345,
											"end": 2467,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2418,
											"end": 2442,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "63"
										},
										{
											"begin": 2436,
											"end": 2441,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2418,
											"end": 2442,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "52"
										},
										{
											"begin": 2418,
											"end": 2442,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 2418,
											"end": 2442,
											"name": "tag",
											"source": 2,
											"value": "63"
										},
										{
											"begin": 2418,
											"end": 2442,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2411,
											"end": 2416,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2408,
											"end": 2443,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 2398,
											"end": 2461,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "64"
										},
										{
											"begin": 2398,
											"end": 2461,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2457,
											"end": 2458,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2454,
											"end": 2455,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2447,
											"end": 2459,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 2398,
											"end": 2461,
											"name": "tag",
											"source": 2,
											"value": "64"
										},
										{
											"begin": 2398,
											"end": 2461,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2345,
											"end": 2467,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2345,
											"end": 2467,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 2473,
											"end": 2595,
											"name": "tag",
											"source": 2,
											"value": "30"
										},
										{
											"begin": 2473,
											"end": 2595,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2546,
											"end": 2570,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "66"
										},
										{
											"begin": 2564,
											"end": 2569,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2546,
											"end": 2570,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "45"
										},
										{
											"begin": 2546,
											"end": 2570,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 2546,
											"end": 2570,
											"name": "tag",
											"source": 2,
											"value": "66"
										},
										{
											"begin": 2546,
											"end": 2570,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2539,
											"end": 2544,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2536,
											"end": 2571,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 2526,
											"end": 2589,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "67"
										},
										{
											"begin": 2526,
											"end": 2589,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2585,
											"end": 2586,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2582,
											"end": 2583,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2575,
											"end": 2587,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 2526,
											"end": 2589,
											"name": "tag",
											"source": 2,
											"value": "67"
										},
										{
											"begin": 2526,
											"end": 2589,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2473,
											"end": 2595,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2473,
											"end": 2595,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										}
									]
								}
							}
						},
						"methodIdentifiers": {
							"getAmountForToken(uint256,address,address)": "034a6778",
							"isTokenAccepted(uint256,address,address)": "af577392",
							"price()": "a035b1fe"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_price\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"paymentRequestId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"payer\",\"type\":\"address\"}],\"name\":\"getAmountForToken\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"paymentRequestId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"payer\",\"type\":\"address\"}],\"name\":\"isTokenAccepted\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"price\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"getAmountForToken(uint256,address,address)\":{\"notice\":\"Returns the amount of tokens for a particular paymentRequest ID.\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/tests/FixeDynamicTokenAmount.sol\":\"FixedDynamicTokenAmount\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/tests/FixeDynamicTokenAmount.sol\":{\"keccak256\":\"0x0967dfd000acc23869914ae17a511b85657d39eedd31bd6b0cb49e2f842a4815\",\"urls\":[\"bzz-raw://c9c1b7cf581775e9728107cbcba3b03d83ba8e8ac6f92452c2b44c8ea5d1c9d4\",\"dweb:/ipfs/QmZjje1WvHscsHRHc4VUQ1bXsWBA9t2QhrXD3TMM5PCmsZ\"]},\"interfaces/IDynamicTokenAmount.sol\":{\"keccak256\":\"0xa8d09837a776fedbce4a9c79c0dc61126be30a5014a5c4f9bfe3d209b197bf9d\",\"urls\":[\"bzz-raw://573ff97ba0a880dc7da38263f113548530769b899201895dde32800562c1e896\",\"dweb:/ipfs/QmeZNactnPtcWe8BMpVHJZ1pGJJyRwhuFFS1p5GVwLLkTA\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 6,
								"contract": "contracts/tests/FixeDynamicTokenAmount.sol:FixedDynamicTokenAmount",
								"label": "price",
								"offset": 0,
								"slot": "0",
								"type": "t_uint256"
							}
						],
						"types": {
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {
							"getAmountForToken(uint256,address,address)": {
								"notice": "Returns the amount of tokens for a particular paymentRequest ID."
							}
						},
						"version": 1
					}
				}
			},
			"interfaces/IDynamicTokenAmount.sol": {
				"IDynamicTokenAmount": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "paymentRequestId",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "token",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "payer",
									"type": "address"
								}
							],
							"name": "getAmountForToken",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "paymentRequestId",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "token",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "payer",
									"type": "address"
								}
							],
							"name": "isTokenAccepted",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"getAmountForToken(uint256,address,address)": "034a6778",
							"isTokenAccepted(uint256,address,address)": "af577392"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"paymentRequestId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"payer\",\"type\":\"address\"}],\"name\":\"getAmountForToken\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"paymentRequestId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"payer\",\"type\":\"address\"}],\"name\":\"isTokenAccepted\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"getAmountForToken(uint256,address,address)\":{\"notice\":\"Returns the amount of tokens for a particular paymentRequest ID.\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"interfaces/IDynamicTokenAmount.sol\":\"IDynamicTokenAmount\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"interfaces/IDynamicTokenAmount.sol\":{\"keccak256\":\"0xa8d09837a776fedbce4a9c79c0dc61126be30a5014a5c4f9bfe3d209b197bf9d\",\"urls\":[\"bzz-raw://573ff97ba0a880dc7da38263f113548530769b899201895dde32800562c1e896\",\"dweb:/ipfs/QmeZNactnPtcWe8BMpVHJZ1pGJJyRwhuFFS1p5GVwLLkTA\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {
							"getAmountForToken(uint256,address,address)": {
								"notice": "Returns the amount of tokens for a particular paymentRequest ID."
							}
						},
						"version": 1
					}
				}
			}
		},
		"errors": [
			{
				"component": "general",
				"errorCode": "1878",
				"formattedMessage": "Warning: SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing \"SPDX-License-Identifier: <SPDX-License>\" to each source file. Use \"SPDX-License-Identifier: UNLICENSED\" for non-open-source code. Please see https://spdx.org for more information.\n--> contracts/tests/FixeDynamicTokenAmount.sol\n\n",
				"message": "SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing \"SPDX-License-Identifier: <SPDX-License>\" to each source file. Use \"SPDX-License-Identifier: UNLICENSED\" for non-open-source code. Please see https://spdx.org for more information.",
				"severity": "warning",
				"sourceLocation": {
					"end": -1,
					"file": "contracts/tests/FixeDynamicTokenAmount.sol",
					"start": -1
				},
				"type": "Warning"
			},
			{
				"component": "general",
				"errorCode": "1878",
				"formattedMessage": "Warning: SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing \"SPDX-License-Identifier: <SPDX-License>\" to each source file. Use \"SPDX-License-Identifier: UNLICENSED\" for non-open-source code. Please see https://spdx.org for more information.\n--> interfaces/IDynamicTokenAmount.sol\n\n",
				"message": "SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing \"SPDX-License-Identifier: <SPDX-License>\" to each source file. Use \"SPDX-License-Identifier: UNLICENSED\" for non-open-source code. Please see https://spdx.org for more information.",
				"severity": "warning",
				"sourceLocation": {
					"end": -1,
					"file": "interfaces/IDynamicTokenAmount.sol",
					"start": -1
				},
				"type": "Warning"
			},
			{
				"component": "general",
				"errorCode": "5667",
				"formattedMessage": "Warning: Unused function parameter. Remove or comment out the variable name to silence this warning.\n  --> contracts/tests/FixeDynamicTokenAmount.sol:11:32:\n   |\n11 |     function getAmountForToken(uint256 paymentRequestId, address token, address payer) external override returns (uint256) {\n   |                                ^^^^^^^^^^^^^^^^^^^^^^^^\n\n",
				"message": "Unused function parameter. Remove or comment out the variable name to silence this warning.",
				"severity": "warning",
				"sourceLocation": {
					"end": 275,
					"file": "contracts/tests/FixeDynamicTokenAmount.sol",
					"start": 251
				},
				"type": "Warning"
			},
			{
				"component": "general",
				"errorCode": "5667",
				"formattedMessage": "Warning: Unused function parameter. Remove or comment out the variable name to silence this warning.\n  --> contracts/tests/FixeDynamicTokenAmount.sol:11:58:\n   |\n11 |     function getAmountForToken(uint256 paymentRequestId, address token, address payer) external override returns (uint256) {\n   |                                                          ^^^^^^^^^^^^^\n\n",
				"message": "Unused function parameter. Remove or comment out the variable name to silence this warning.",
				"severity": "warning",
				"sourceLocation": {
					"end": 290,
					"file": "contracts/tests/FixeDynamicTokenAmount.sol",
					"start": 277
				},
				"type": "Warning"
			},
			{
				"component": "general",
				"errorCode": "5667",
				"formattedMessage": "Warning: Unused function parameter. Remove or comment out the variable name to silence this warning.\n  --> contracts/tests/FixeDynamicTokenAmount.sol:11:73:\n   |\n11 |     function getAmountForToken(uint256 paymentRequestId, address token, address payer) external override returns (uint256) {\n   |                                                                         ^^^^^^^^^^^^^\n\n",
				"message": "Unused function parameter. Remove or comment out the variable name to silence this warning.",
				"severity": "warning",
				"sourceLocation": {
					"end": 305,
					"file": "contracts/tests/FixeDynamicTokenAmount.sol",
					"start": 292
				},
				"type": "Warning"
			},
			{
				"component": "general",
				"errorCode": "5667",
				"formattedMessage": "Warning: Unused function parameter. Remove or comment out the variable name to silence this warning.\n  --> contracts/tests/FixeDynamicTokenAmount.sol:15:30:\n   |\n15 |     function isTokenAccepted(uint256 paymentRequestId, address token, address payer) public override returns (bool) {\n   |                              ^^^^^^^^^^^^^^^^^^^^^^^^\n\n",
				"message": "Unused function parameter. Remove or comment out the variable name to silence this warning.",
				"severity": "warning",
				"sourceLocation": {
					"end": 427,
					"file": "contracts/tests/FixeDynamicTokenAmount.sol",
					"start": 403
				},
				"type": "Warning"
			},
			{
				"component": "general",
				"errorCode": "5667",
				"formattedMessage": "Warning: Unused function parameter. Remove or comment out the variable name to silence this warning.\n  --> contracts/tests/FixeDynamicTokenAmount.sol:15:56:\n   |\n15 |     function isTokenAccepted(uint256 paymentRequestId, address token, address payer) public override returns (bool) {\n   |                                                        ^^^^^^^^^^^^^\n\n",
				"message": "Unused function parameter. Remove or comment out the variable name to silence this warning.",
				"severity": "warning",
				"sourceLocation": {
					"end": 442,
					"file": "contracts/tests/FixeDynamicTokenAmount.sol",
					"start": 429
				},
				"type": "Warning"
			},
			{
				"component": "general",
				"errorCode": "5667",
				"formattedMessage": "Warning: Unused function parameter. Remove or comment out the variable name to silence this warning.\n  --> contracts/tests/FixeDynamicTokenAmount.sol:15:71:\n   |\n15 |     function isTokenAccepted(uint256 paymentRequestId, address token, address payer) public override returns (bool) {\n   |                                                                       ^^^^^^^^^^^^^\n\n",
				"message": "Unused function parameter. Remove or comment out the variable name to silence this warning.",
				"severity": "warning",
				"sourceLocation": {
					"end": 457,
					"file": "contracts/tests/FixeDynamicTokenAmount.sol",
					"start": 444
				},
				"type": "Warning"
			},
			{
				"component": "general",
				"errorCode": "2018",
				"formattedMessage": "Warning: Function state mutability can be restricted to view\n  --> contracts/tests/FixeDynamicTokenAmount.sol:11:5:\n   |\n11 |     function getAmountForToken(uint256 paymentRequestId, address token, address payer) external override returns (uint256) {\n   |     ^ (Relevant source part starts here and spans across multiple lines).\n\n",
				"message": "Function state mutability can be restricted to view",
				"severity": "warning",
				"sourceLocation": {
					"end": 372,
					"file": "contracts/tests/FixeDynamicTokenAmount.sol",
					"start": 224
				},
				"type": "Warning"
			},
			{
				"component": "general",
				"errorCode": "2018",
				"formattedMessage": "Warning: Function state mutability can be restricted to pure\n  --> contracts/tests/FixeDynamicTokenAmount.sol:15:5:\n   |\n15 |     function isTokenAccepted(uint256 paymentRequestId, address token, address payer) public override returns (bool) {\n   |     ^ (Relevant source part starts here and spans across multiple lines).\n\n",
				"message": "Function state mutability can be restricted to pure",
				"severity": "warning",
				"sourceLocation": {
					"end": 518,
					"file": "contracts/tests/FixeDynamicTokenAmount.sol",
					"start": 378
				},
				"type": "Warning"
			}
		],
		"sources": {
			"contracts/tests/FixeDynamicTokenAmount.sol": {
				"ast": {
					"absolutePath": "contracts/tests/FixeDynamicTokenAmount.sol",
					"exportedSymbols": {
						"FixedDynamicTokenAmount": [
							47
						],
						"IDynamicTokenAmount": [
							73
						]
					},
					"id": 48,
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "0:23:0"
						},
						{
							"absolutePath": "interfaces/IDynamicTokenAmount.sol",
							"file": "interfaces/IDynamicTokenAmount.sol",
							"id": 2,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 48,
							"sourceUnit": 74,
							"src": "24:44:0",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 3,
										"name": "IDynamicTokenAmount",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 73,
										"src": "106:19:0"
									},
									"id": 4,
									"nodeType": "InheritanceSpecifier",
									"src": "106:19:0"
								}
							],
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 47,
							"linearizedBaseContracts": [
								47,
								73
							],
							"name": "FixedDynamicTokenAmount",
							"nameLocation": "79:23:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"functionSelector": "a035b1fe",
									"id": 6,
									"mutability": "mutable",
									"name": "price",
									"nameLocation": "147:5:0",
									"nodeType": "VariableDeclaration",
									"scope": 47,
									"src": "132:20:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 5,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "132:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "public"
								},
								{
									"body": {
										"id": 15,
										"nodeType": "Block",
										"src": "187:31:0",
										"statements": [
											{
												"expression": {
													"id": 13,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 11,
														"name": "price",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 6,
														"src": "197:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 12,
														"name": "_price",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 8,
														"src": "205:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "197:14:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 14,
												"nodeType": "ExpressionStatement",
												"src": "197:14:0"
											}
										]
									},
									"id": 16,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 9,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 8,
												"mutability": "mutable",
												"name": "_price",
												"nameLocation": "179:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 16,
												"src": "171:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 7,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "171:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "170:16:0"
									},
									"returnParameters": {
										"id": 10,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "187:0:0"
									},
									"scope": 47,
									"src": "159:59:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										61
									],
									"body": {
										"id": 30,
										"nodeType": "Block",
										"src": "343:29:0",
										"statements": [
											{
												"expression": {
													"id": 28,
													"name": "price",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 6,
													"src": "360:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 27,
												"id": 29,
												"nodeType": "Return",
												"src": "353:12:0"
											}
										]
									},
									"functionSelector": "034a6778",
									"id": 31,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getAmountForToken",
									"nameLocation": "233:17:0",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 24,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "316:8:0"
									},
									"parameters": {
										"id": 23,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 18,
												"mutability": "mutable",
												"name": "paymentRequestId",
												"nameLocation": "259:16:0",
												"nodeType": "VariableDeclaration",
												"scope": 31,
												"src": "251:24:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 17,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "251:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 20,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "285:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 31,
												"src": "277:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 19,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "277:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 22,
												"mutability": "mutable",
												"name": "payer",
												"nameLocation": "300:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 31,
												"src": "292:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 21,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "292:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "250:56:0"
									},
									"returnParameters": {
										"id": 27,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 26,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 31,
												"src": "334:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 25,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "334:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "333:9:0"
									},
									"scope": 47,
									"src": "224:148:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"baseFunctions": [
										72
									],
									"body": {
										"id": 45,
										"nodeType": "Block",
										"src": "490:28:0",
										"statements": [
											{
												"expression": {
													"hexValue": "74727565",
													"id": 43,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "507:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 42,
												"id": 44,
												"nodeType": "Return",
												"src": "500:11:0"
											}
										]
									},
									"functionSelector": "af577392",
									"id": 46,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "isTokenAccepted",
									"nameLocation": "387:15:0",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 39,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "466:8:0"
									},
									"parameters": {
										"id": 38,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 33,
												"mutability": "mutable",
												"name": "paymentRequestId",
												"nameLocation": "411:16:0",
												"nodeType": "VariableDeclaration",
												"scope": 46,
												"src": "403:24:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 32,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "403:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 35,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "437:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 46,
												"src": "429:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 34,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "429:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 37,
												"mutability": "mutable",
												"name": "payer",
												"nameLocation": "452:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 46,
												"src": "444:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 36,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "444:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "402:56:0"
									},
									"returnParameters": {
										"id": 42,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 41,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 46,
												"src": "484:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 40,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "484:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "483:6:0"
									},
									"scope": 47,
									"src": "378:140:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								}
							],
							"scope": 48,
							"src": "70:450:0",
							"usedErrors": []
						}
					],
					"src": "0:520:0"
				},
				"id": 0
			},
			"interfaces/IDynamicTokenAmount.sol": {
				"ast": {
					"absolutePath": "interfaces/IDynamicTokenAmount.sol",
					"exportedSymbols": {
						"IDynamicTokenAmount": [
							73
						]
					},
					"id": 74,
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 49,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "0:23:1"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "interface",
							"fullyImplemented": false,
							"id": 73,
							"linearizedBaseContracts": [
								73
							],
							"name": "IDynamicTokenAmount",
							"nameLocation": "35:19:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 50,
										"nodeType": "StructuredDocumentation",
										"src": "473:76:1",
										"text": "@notice Returns the amount of tokens for a particular paymentRequest ID."
									},
									"functionSelector": "034a6778",
									"id": 61,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getAmountForToken",
									"nameLocation": "563:17:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 57,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 52,
												"mutability": "mutable",
												"name": "paymentRequestId",
												"nameLocation": "589:16:1",
												"nodeType": "VariableDeclaration",
												"scope": 61,
												"src": "581:24:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 51,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "581:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 54,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "615:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 61,
												"src": "607:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 53,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "607:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 56,
												"mutability": "mutable",
												"name": "payer",
												"nameLocation": "630:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 61,
												"src": "622:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 55,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "622:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "580:56:1"
									},
									"returnParameters": {
										"id": 60,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 59,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 61,
												"src": "655:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 58,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "655:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "654:9:1"
									},
									"scope": 73,
									"src": "554:110:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "af577392",
									"id": 72,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "isTokenAccepted",
									"nameLocation": "970:15:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 68,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 63,
												"mutability": "mutable",
												"name": "paymentRequestId",
												"nameLocation": "994:16:1",
												"nodeType": "VariableDeclaration",
												"scope": 72,
												"src": "986:24:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 62,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "986:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 65,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "1020:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 72,
												"src": "1012:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 64,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1012:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 67,
												"mutability": "mutable",
												"name": "payer",
												"nameLocation": "1035:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 72,
												"src": "1027:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 66,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1027:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "985:56:1"
									},
									"returnParameters": {
										"id": 71,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 70,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 72,
												"src": "1060:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 69,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1060:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1059:6:1"
									},
									"scope": 73,
									"src": "961:105:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 74,
							"src": "25:1044:1",
							"usedErrors": []
						}
					],
					"src": "0:1069:1"
				},
				"id": 1
			}
		}
	}
}