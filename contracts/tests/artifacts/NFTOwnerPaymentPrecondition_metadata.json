{
	"compiler": {
		"version": "0.8.17+commit.8df45f5f"
	},
	"language": "Solidity",
	"output": {
		"abi": [
			{
				"inputs": [
					{
						"internalType": "uint256",
						"name": "paymentRequestId",
						"type": "uint256"
					},
					{
						"internalType": "address",
						"name": "payer",
						"type": "address"
					},
					{
						"internalType": "address",
						"name": "token",
						"type": "address"
					}
				],
				"name": "isPaymentAllowed",
				"outputs": [
					{
						"internalType": "bool",
						"name": "",
						"type": "bool"
					}
				],
				"stateMutability": "nonpayable",
				"type": "function"
			}
		],
		"devdoc": {
			"kind": "dev",
			"methods": {},
			"version": 1
		},
		"userdoc": {
			"kind": "user",
			"methods": {
				"isPaymentAllowed(uint256,address,address)": {
					"notice": "Function that checks whether the payment for a particular payment request is allowed for the payer. To allow the payment request processing to proceed true should be returned. To disallow the payment request processing to proceed, either false should be returned, or a revert should be done. Performing a revert is useful if your goal is to provide the caller with a detailed error message. Returning false is desirable if your goal is to display a generic error message. The returning of the false value could be particulary useful in Zero-Knowledge type of computations, where you may not want to expose the specific conidtion which was not met by the caller."
				}
			},
			"notice": "Sample payment precondition contract that allows payment in a particular token only if the address has not purchased the paymentRequestId in question.",
			"version": 1
		}
	},
	"settings": {
		"compilationTarget": {
			"contracts/tests/OnePurchasePerAddressPaymentPrecondition.sol": "NFTOwnerPaymentPrecondition"
		},
		"evmVersion": "london",
		"libraries": {},
		"metadata": {
			"bytecodeHash": "ipfs"
		},
		"optimizer": {
			"enabled": false,
			"runs": 200
		},
		"remappings": []
	},
	"sources": {
		"@openzeppelin/contracts/access/Ownable.sol": {
			"keccak256": "0xa94b34880e3c1b0b931662cb1c09e5dfa6662f31cba80e07c5ee71cd135c9673",
			"license": "MIT",
			"urls": [
				"bzz-raw://40fb1b5102468f783961d0af743f91b9980cf66b50d1d12009f6bb1869cea4d2",
				"dweb:/ipfs/QmYqEbJML4jB1GHbzD4cUZDtJg5wVwNm3vDJq1GbyDus8y"
			]
		},
		"@openzeppelin/contracts/token/ERC721/ERC721.sol": {
			"keccak256": "0xd89f3585b211fc9e3408384a4c4efdc3a93b2f877a3821046fa01c219d35be1b",
			"license": "MIT",
			"urls": [
				"bzz-raw://5ea15ef7c8980240ccd46df13809d163f749bc0a01d8bced1875660d4872da1c",
				"dweb:/ipfs/QmbDfAT9VeCSG4cnPd6tjDMp8ED85dLHbWyMyv7wbmL4CH"
			]
		},
		"@openzeppelin/contracts/token/ERC721/IERC721.sol": {
			"keccak256": "0xab28a56179c1db258c9bf5235b382698cb650debecb51b23d12be9e241374b68",
			"license": "MIT",
			"urls": [
				"bzz-raw://daae589a9d6fa7e55f99f86c0a16796ca490f243fb3693632c3711c0646c1d56",
				"dweb:/ipfs/QmR3zpd7wNw3rcUdekwiv6FYHJqksuTCXLVioTxu6Fbxk3"
			]
		},
		"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol": {
			"keccak256": "0xa82b58eca1ee256be466e536706850163d2ec7821945abd6b4778cfb3bee37da",
			"license": "MIT",
			"urls": [
				"bzz-raw://6e75cf83beb757b8855791088546b8337e9d4684e169400c20d44a515353b708",
				"dweb:/ipfs/QmYvPafLfoquiDMEj7CKHtvbgHu7TJNPSVPSCjrtjV8HjV"
			]
		},
		"@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol": {
			"keccak256": "0xa8796bd16014cefb8c26449413981a49c510f92a98d6828494f5fd046223ced3",
			"license": "MIT",
			"urls": [
				"bzz-raw://63a5e0bb5a7d182e0d0eef87033f78115eab791de3626a929bc98c157087880a",
				"dweb:/ipfs/QmetkXAu2CJKS4qrZtEQPU8okAPwUwa6HL4XYwk8vrYMk8"
			]
		},
		"@openzeppelin/contracts/token/ERC721/extensions/IERC721Enumerable.sol": {
			"keccak256": "0xd1556954440b31c97a142c6ba07d5cade45f96fafd52091d33a14ebe365aecbf",
			"license": "MIT",
			"urls": [
				"bzz-raw://26fef835622b46a5ba08b3ef6b46a22e94b5f285d0f0fb66b703bd30217d2c34",
				"dweb:/ipfs/QmZ548qdwfL1qF7aXz3xh1GCdTiST81kGGuKRqVUfYmPZR"
			]
		},
		"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol": {
			"keccak256": "0x75b829ff2f26c14355d1cba20e16fe7b29ca58eb5fef665ede48bc0f9c6c74b9",
			"license": "MIT",
			"urls": [
				"bzz-raw://a0a107160525724f9e1bbbab031defc2f298296dd9e331f16a6f7130cec32146",
				"dweb:/ipfs/QmemujxSd7gX8A9M8UwmNbz4Ms3U9FG9QfudUgxwvTmPWf"
			]
		},
		"@openzeppelin/contracts/utils/Address.sol": {
			"keccak256": "0xf96f969e24029d43d0df89e59d365f277021dac62b48e1c1e3ebe0acdd7f1ca1",
			"license": "MIT",
			"urls": [
				"bzz-raw://ec772b45a624be516f1c81970caa8a2e144301e9d0921cbc1a2789fef39a1269",
				"dweb:/ipfs/QmNyjwxCrGhQMyzLD93oUobJXVe9ceJvRvfXwbEtuxPiEj"
			]
		},
		"@openzeppelin/contracts/utils/Context.sol": {
			"keccak256": "0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7",
			"license": "MIT",
			"urls": [
				"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92",
				"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3"
			]
		},
		"@openzeppelin/contracts/utils/Counters.sol": {
			"keccak256": "0xf0018c2440fbe238dd3a8732fa8e17a0f9dce84d31451dc8a32f6d62b349c9f1",
			"license": "MIT",
			"urls": [
				"bzz-raw://59e1c62884d55b70f3ae5432b44bb3166ad71ae3acd19c57ab6ddc3c87c325ee",
				"dweb:/ipfs/QmezuXg5GK5oeA4F91EZhozBFekhq5TD966bHPH18cCqhu"
			]
		},
		"@openzeppelin/contracts/utils/Strings.sol": {
			"keccak256": "0xa4d1d62251f8574deb032a35fc948386a9b4de74b812d4f545a1ac120486b48a",
			"license": "MIT",
			"urls": [
				"bzz-raw://8c969013129ba9e651a20735ef659fef6d8a1139ea3607bd4b26ddea2d645634",
				"dweb:/ipfs/QmVhVa6LGuzAcB8qgDtVHRkucn4ihj5UZr8xBLcJkP6ucb"
			]
		},
		"@openzeppelin/contracts/utils/introspection/ERC165.sol": {
			"keccak256": "0xd10975de010d89fd1c78dc5e8a9a7e7f496198085c151648f20cba166b32582b",
			"license": "MIT",
			"urls": [
				"bzz-raw://fb0048dee081f6fffa5f74afc3fb328483c2a30504e94a0ddd2a5114d731ec4d",
				"dweb:/ipfs/QmZptt1nmYoA5SgjwnSgWqgUSDgm4q52Yos3xhnMv3MV43"
			]
		},
		"@openzeppelin/contracts/utils/introspection/IERC165.sol": {
			"keccak256": "0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1",
			"license": "MIT",
			"urls": [
				"bzz-raw://be161e54f24e5c6fae81a12db1a8ae87bc5ae1b0ddc805d82a1440a68455088f",
				"dweb:/ipfs/QmP7C3CHdY9urF4dEMb9wmsp1wMxHF6nhA2yQE5SKiPAdy"
			]
		},
		"@openzeppelin/contracts/utils/math/Math.sol": {
			"keccak256": "0xa1e8e83cd0087785df04ac79fb395d9f3684caeaf973d9e2c71caef723a3a5d6",
			"license": "MIT",
			"urls": [
				"bzz-raw://33bbf48cc069be677705037ba7520c22b1b622c23b33e1a71495f2d36549d40b",
				"dweb:/ipfs/Qmct36zWXv3j7LZB83uwbg7TXwnZSN1fqHNDZ93GG98bGz"
			]
		},
		"contracts/PaymentRequest.sol": {
			"keccak256": "0x66e8a9bb752886ae755be67f6c458c9c84ca239b6441b037accca54e00b571db",
			"urls": [
				"bzz-raw://51133fd6c9154e00cd8be283e532edaf97b494206dd31773050ce18d7b4e52b0",
				"dweb:/ipfs/Qme8QT9xv7cjNWYQiTcnTwv9afgSbqnrfnFeQS5ccFX8ZU"
			]
		},
		"contracts/Receipt.sol": {
			"keccak256": "0x016e8fde2e2a80ce5f6d8d28a9a481a8e905fe57e9a830355ecb3d208f4c2aa3",
			"urls": [
				"bzz-raw://2d4a883a85568df7d4a0fff8f12eea1ba0d5ac0c870ee287f27a878d189e924e",
				"dweb:/ipfs/QmXNSbtbbZQLbMsZbqTcori4GfaB3GaRbpuRSCdATVCXFJ"
			]
		},
		"contracts/libraries/Payment.sol": {
			"keccak256": "0xecbc5dc2d2925a99f408783868494eac3dafce4a36616852bf4abb3185f337ce",
			"urls": [
				"bzz-raw://bf571a613098656a84d71f4f08f9c5bb1c75fbe7a6cec8474966b40d794b6d6e",
				"dweb:/ipfs/QmdJWXZA4dQNrvWFDrvVGaEAsG15oT2VJY5GegqFJMBmUk"
			]
		},
		"contracts/tests/OnePurchasePerAddressPaymentPrecondition.sol": {
			"keccak256": "0xdf283718bd13bc48a61385756687b17831e6d8f222370ff41d8e5b8f5e3b018d",
			"urls": [
				"bzz-raw://04621478f1db5e2ac2a8288c73fc3bcd5f365b919e7eca368d6b7b09528575f7",
				"dweb:/ipfs/QmcD7smyXD2fpMc2b5b9vDAQrhjxyj4ckinXuoqy9Byq2J"
			]
		},
		"interfaces/IDynamicTokenAmount.sol": {
			"keccak256": "0xeb2605036476e88154fd7cb3308168e6b4ee66ff25087946e96b89b0fd85a601",
			"urls": [
				"bzz-raw://4260100ef6c74489b72949c67ccb22fd9348d1fda95653af098b2f78619f4af3",
				"dweb:/ipfs/QmetjUnQvGHSWuvcvURUVY5dJ8RZyF5h1sJ1pKmQCGWmrD"
			]
		},
		"interfaces/IERC20.sol": {
			"keccak256": "0xe9145203db53d04ed41439d348a2084ca35000ae602bad2fc98c162bb04a41a1",
			"urls": [
				"bzz-raw://7e1de0f232f7615f56ac5a0f3b173663f169d866cec1b20929e3726fc1e72d1f",
				"dweb:/ipfs/Qmb3soy8ukBnuymN6cN6yMjo6gtfW8zkfzZbVJWGGtpztN"
			]
		},
		"interfaces/IPaymentPrecondition.sol": {
			"keccak256": "0xc7b902e76aa29622ed952adb80d68407e8c6235c3412bad3549c39618a44258a",
			"urls": [
				"bzz-raw://639b8dc5fd39d9f379a1a6d04498551a81328f0ebf0fe3ece7983c668051814e",
				"dweb:/ipfs/QmdCoDQurwxsr5QA9aqaRsBEexwLvpWMHthjPvz6Dhty83"
			]
		},
		"interfaces/IPostPaymentAction.sol": {
			"keccak256": "0xb4326c5294d00dac3c2ed97f8470bf7ab6d9fc4605847e2fc62a55915aaab08c",
			"urls": [
				"bzz-raw://5251dd8597fc7e786733258dc1d9b7f8ccbcfbc5df6aa5604a30be9981880200",
				"dweb:/ipfs/QmXoedU186hfdms3ckDJbzAqGvK9KjR6JZsxkdipHSAAdq"
			]
		}
	},
	"version": 1
}